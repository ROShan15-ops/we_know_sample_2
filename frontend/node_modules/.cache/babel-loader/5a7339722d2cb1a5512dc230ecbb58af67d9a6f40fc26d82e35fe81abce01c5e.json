{"ast":null,"code":"import axios from'axios';// Base URL for API\nconst API_BASE_URL='http://localhost:5001';// Helper function to get auth token\nconst getAuthToken=()=>{return localStorage.getItem('weKnowToken');};// Helper function to get auth headers\nconst getAuthHeaders=()=>{const token=getAuthToken();return{'Authorization':`Bearer ${token}`,'Content-Type':'application/json'};};// User Data Service\nclass UserDataService{// Recent Searches\nasync getRecentSearches(){try{const response=await axios.get(`${API_BASE_URL}/user/recent-searches`,{headers:getAuthHeaders()});return response.data.recent_searches||[];}catch(error){console.error('Error fetching recent searches:',error);return[];}}async addRecentSearch(dishName){try{await axios.post(`${API_BASE_URL}/user/recent-searches`,{dish_name:dishName},{headers:getAuthHeaders()});return true;}catch(error){console.error('Error adding recent search:',error);return false;}}// Orders\nasync getOrders(){try{const response=await axios.get(`${API_BASE_URL}/user/orders`,{headers:getAuthHeaders()});return response.data.orders||[];}catch(error){console.error('Error fetching orders:',error);return[];}}async addOrder(orderData){try{const response=await axios.post(`${API_BASE_URL}/user/orders`,orderData,{headers:getAuthHeaders()});return response.data;}catch(error){console.error('Error adding order:',error);throw error;}}async updateOrderStatus(orderId,status){try{const response=await axios.put(`${API_BASE_URL}/user/orders/${orderId}/status`,{status:status},{headers:getAuthHeaders()});return response.data;}catch(error){console.error('Error updating order status:',error);throw error;}}async clearOrders(){try{const response=await axios.delete(`${API_BASE_URL}/user/orders/clear`,{headers:getAuthHeaders()});return response.data;}catch(error){console.error('Error clearing orders:',error);throw error;}}// Addresses\nasync getAddresses(){try{const response=await axios.get(`${API_BASE_URL}/user/addresses`,{headers:getAuthHeaders()});return response.data.addresses||[];}catch(error){console.error('Error fetching addresses:',error);return[];}}async addAddress(addressData){try{const response=await axios.post(`${API_BASE_URL}/user/addresses`,addressData,{headers:getAuthHeaders()});return response.data;}catch(error){console.error('Error adding address:',error);throw error;}}// Preferences\nasync getPreferences(){try{const response=await axios.get(`${API_BASE_URL}/user/preferences`,{headers:getAuthHeaders()});return response.data.preferences||{};}catch(error){console.error('Error fetching preferences:',error);return{};}}async updatePreferences(preferencesData){try{const response=await axios.put(`${API_BASE_URL}/user/preferences`,preferencesData,{headers:getAuthHeaders()});return response.data;}catch(error){console.error('Error updating preferences:',error);throw error;}}// User Profile\nasync getUserProfile(){try{const response=await axios.get(`${API_BASE_URL}/auth/me`,{headers:getAuthHeaders()});return response.data.user;}catch(error){console.error('Error fetching user profile:',error);return null;}}// Check if user is authenticated\nisAuthenticated(){const token=getAuthToken();const user=localStorage.getItem('weKnowUser');return!!(token&&user);}// Get current user data\ngetCurrentUser(){const user=localStorage.getItem('weKnowUser');return user?JSON.parse(user):null;}// Clear user data on logout\nclearUserData(){localStorage.removeItem('weKnowToken');localStorage.removeItem('weKnowUser');// Clear any old localStorage keys that might interfere\nlocalStorage.removeItem('weKnowRecentSearches');localStorage.removeItem('weKnowAuthToken');}// Clear all app-related localStorage data\nclearAllAppData(){// Clear all keys that start with 'weKnow'\nconst keysToRemove=[];for(let i=0;i<localStorage.length;i++){const key=localStorage.key(i);if(key&&key.startsWith('weKnow')){keysToRemove.push(key);}}keysToRemove.forEach(key=>localStorage.removeItem(key));}}// Create singleton instance\nconst userDataService=new UserDataService();export default userDataService;","map":{"version":3,"names":["axios","API_BASE_URL","getAuthToken","localStorage","getItem","getAuthHeaders","token","UserDataService","getRecentSearches","response","get","headers","data","recent_searches","error","console","addRecentSearch","dishName","post","dish_name","getOrders","orders","addOrder","orderData","updateOrderStatus","orderId","status","put","clearOrders","delete","getAddresses","addresses","addAddress","addressData","getPreferences","preferences","updatePreferences","preferencesData","getUserProfile","user","isAuthenticated","getCurrentUser","JSON","parse","clearUserData","removeItem","clearAllAppData","keysToRemove","i","length","key","startsWith","push","forEach","userDataService"],"sources":["/Users/roshan/Desktop/we_know_sample_2/frontend/src/services/userDataService.js"],"sourcesContent":["import axios from 'axios';\n\n// Base URL for API\nconst API_BASE_URL = 'http://localhost:5001';\n\n// Helper function to get auth token\nconst getAuthToken = () => {\n  return localStorage.getItem('weKnowToken');\n};\n\n// Helper function to get auth headers\nconst getAuthHeaders = () => {\n  const token = getAuthToken();\n  return {\n    'Authorization': `Bearer ${token}`,\n    'Content-Type': 'application/json'\n  };\n};\n\n// User Data Service\nclass UserDataService {\n  \n  // Recent Searches\n  async getRecentSearches() {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/user/recent-searches`, {\n        headers: getAuthHeaders()\n      });\n      return response.data.recent_searches || [];\n    } catch (error) {\n      console.error('Error fetching recent searches:', error);\n      return [];\n    }\n  }\n\n  async addRecentSearch(dishName) {\n    try {\n      await axios.post(`${API_BASE_URL}/user/recent-searches`, {\n        dish_name: dishName\n      }, {\n        headers: getAuthHeaders()\n      });\n      return true;\n    } catch (error) {\n      console.error('Error adding recent search:', error);\n      return false;\n    }\n  }\n\n  // Orders\n  async getOrders() {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/user/orders`, {\n        headers: getAuthHeaders()\n      });\n      return response.data.orders || [];\n    } catch (error) {\n      console.error('Error fetching orders:', error);\n      return [];\n    }\n  }\n\n  async addOrder(orderData) {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/user/orders`, orderData, {\n        headers: getAuthHeaders()\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error adding order:', error);\n      throw error;\n    }\n  }\n\n  async updateOrderStatus(orderId, status) {\n    try {\n      const response = await axios.put(`${API_BASE_URL}/user/orders/${orderId}/status`, {\n        status: status\n      }, {\n        headers: getAuthHeaders()\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error updating order status:', error);\n      throw error;\n    }\n  }\n\n  async clearOrders() {\n    try {\n      const response = await axios.delete(`${API_BASE_URL}/user/orders/clear`, {\n        headers: getAuthHeaders()\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error clearing orders:', error);\n      throw error;\n    }\n  }\n\n  // Addresses\n  async getAddresses() {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/user/addresses`, {\n        headers: getAuthHeaders()\n      });\n      return response.data.addresses || [];\n    } catch (error) {\n      console.error('Error fetching addresses:', error);\n      return [];\n    }\n  }\n\n  async addAddress(addressData) {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/user/addresses`, addressData, {\n        headers: getAuthHeaders()\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error adding address:', error);\n      throw error;\n    }\n  }\n\n  // Preferences\n  async getPreferences() {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/user/preferences`, {\n        headers: getAuthHeaders()\n      });\n      return response.data.preferences || {};\n    } catch (error) {\n      console.error('Error fetching preferences:', error);\n      return {};\n    }\n  }\n\n  async updatePreferences(preferencesData) {\n    try {\n      const response = await axios.put(`${API_BASE_URL}/user/preferences`, preferencesData, {\n        headers: getAuthHeaders()\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error updating preferences:', error);\n      throw error;\n    }\n  }\n\n  // User Profile\n  async getUserProfile() {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/auth/me`, {\n        headers: getAuthHeaders()\n      });\n      return response.data.user;\n    } catch (error) {\n      console.error('Error fetching user profile:', error);\n      return null;\n    }\n  }\n\n  // Check if user is authenticated\n  isAuthenticated() {\n    const token = getAuthToken();\n    const user = localStorage.getItem('weKnowUser');\n    return !!(token && user);\n  }\n\n  // Get current user data\n  getCurrentUser() {\n    const user = localStorage.getItem('weKnowUser');\n    return user ? JSON.parse(user) : null;\n  }\n\n  // Clear user data on logout\n  clearUserData() {\n    localStorage.removeItem('weKnowToken');\n    localStorage.removeItem('weKnowUser');\n    // Clear any old localStorage keys that might interfere\n    localStorage.removeItem('weKnowRecentSearches');\n    localStorage.removeItem('weKnowAuthToken');\n  }\n\n  // Clear all app-related localStorage data\n  clearAllAppData() {\n    // Clear all keys that start with 'weKnow'\n    const keysToRemove = [];\n    for (let i = 0; i < localStorage.length; i++) {\n      const key = localStorage.key(i);\n      if (key && key.startsWith('weKnow')) {\n        keysToRemove.push(key);\n      }\n    }\n    keysToRemove.forEach(key => localStorage.removeItem(key));\n  }\n}\n\n// Create singleton instance\nconst userDataService = new UserDataService();\n\nexport default userDataService; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}