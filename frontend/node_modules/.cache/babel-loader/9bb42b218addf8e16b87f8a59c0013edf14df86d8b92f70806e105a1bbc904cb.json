{"ast":null,"code":"import axios from 'axios';\n\n// Base URL for API\nconst API_BASE_URL = 'http://localhost:5001';\n\n// Helper function to get auth token\nconst getAuthToken = () => {\n  return localStorage.getItem('weKnowToken');\n};\n\n// Helper function to get auth headers\nconst getAuthHeaders = () => {\n  const token = getAuthToken();\n  return {\n    'Authorization': `Bearer ${token}`,\n    'Content-Type': 'application/json'\n  };\n};\n\n// User Data Service\nclass UserDataService {\n  // Recent Searches\n  async getRecentSearches() {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/user/recent-searches`, {\n        headers: getAuthHeaders()\n      });\n      return response.data.recent_searches || [];\n    } catch (error) {\n      console.error('Error fetching recent searches:', error);\n      return [];\n    }\n  }\n  async addRecentSearch(dishName) {\n    try {\n      await axios.post(`${API_BASE_URL}/user/recent-searches`, {\n        dish_name: dishName\n      }, {\n        headers: getAuthHeaders()\n      });\n      return true;\n    } catch (error) {\n      console.error('Error adding recent search:', error);\n      return false;\n    }\n  }\n\n  // Orders\n  async getOrders() {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/user/orders`, {\n        headers: getAuthHeaders()\n      });\n      return response.data.orders || [];\n    } catch (error) {\n      console.error('Error fetching orders:', error);\n      return [];\n    }\n  }\n  async addOrder(orderData) {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/user/orders`, orderData, {\n        headers: getAuthHeaders()\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error adding order:', error);\n      throw error;\n    }\n  }\n  async updateOrderStatus(orderId, status) {\n    try {\n      const response = await axios.put(`${API_BASE_URL}/user/orders/${orderId}/status`, {\n        status: status\n      }, {\n        headers: getAuthHeaders()\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error updating order status:', error);\n      throw error;\n    }\n  }\n  async clearOrders() {\n    try {\n      const response = await axios.delete(`${API_BASE_URL}/user/orders/clear`, {\n        headers: getAuthHeaders()\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error clearing orders:', error);\n      throw error;\n    }\n  }\n\n  // Addresses\n  async getAddresses() {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/user/addresses`, {\n        headers: getAuthHeaders()\n      });\n      return response.data.addresses || [];\n    } catch (error) {\n      console.error('Error fetching addresses:', error);\n      return [];\n    }\n  }\n  async addAddress(addressData) {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/user/addresses`, addressData, {\n        headers: getAuthHeaders()\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error adding address:', error);\n      throw error;\n    }\n  }\n\n  // Preferences\n  async getPreferences() {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/user/preferences`, {\n        headers: getAuthHeaders()\n      });\n      return response.data.preferences || {};\n    } catch (error) {\n      console.error('Error fetching preferences:', error);\n      return {};\n    }\n  }\n  async updatePreferences(preferencesData) {\n    try {\n      const response = await axios.put(`${API_BASE_URL}/user/preferences`, preferencesData, {\n        headers: getAuthHeaders()\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error updating preferences:', error);\n      throw error;\n    }\n  }\n\n  // User Profile\n  async getUserProfile() {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/auth/me`, {\n        headers: getAuthHeaders()\n      });\n      return response.data.user;\n    } catch (error) {\n      console.error('Error fetching user profile:', error);\n      return null;\n    }\n  }\n\n  // Check if user is authenticated\n  isAuthenticated() {\n    const token = getAuthToken();\n    const user = localStorage.getItem('weKnowUser');\n    return !!(token && user);\n  }\n\n  // Get current user data\n  getCurrentUser() {\n    const user = localStorage.getItem('weKnowUser');\n    return user ? JSON.parse(user) : null;\n  }\n\n  // Clear user data on logout\n  clearUserData() {\n    localStorage.removeItem('weKnowToken');\n    localStorage.removeItem('weKnowUser');\n    // Clear any old localStorage keys that might interfere\n    localStorage.removeItem('weKnowRecentSearches');\n    localStorage.removeItem('weKnowAuthToken');\n  }\n\n  // Clear all app-related localStorage data\n  clearAllAppData() {\n    // Clear all keys that start with 'weKnow'\n    const keysToRemove = [];\n    for (let i = 0; i < localStorage.length; i++) {\n      const key = localStorage.key(i);\n      if (key && key.startsWith('weKnow')) {\n        keysToRemove.push(key);\n      }\n    }\n    keysToRemove.forEach(key => localStorage.removeItem(key));\n  }\n}\n\n// Create singleton instance\nconst userDataService = new UserDataService();\nexport default userDataService;","map":{"version":3,"names":["axios","API_BASE_URL","getAuthToken","localStorage","getItem","getAuthHeaders","token","UserDataService","getRecentSearches","response","get","headers","data","recent_searches","error","console","addRecentSearch","dishName","post","dish_name","getOrders","orders","addOrder","orderData","updateOrderStatus","orderId","status","put","clearOrders","delete","getAddresses","addresses","addAddress","addressData","getPreferences","preferences","updatePreferences","preferencesData","getUserProfile","user","isAuthenticated","getCurrentUser","JSON","parse","clearUserData","removeItem","clearAllAppData","keysToRemove","i","length","key","startsWith","push","forEach","userDataService"],"sources":["/Users/roshan/Desktop/we_know_sample_2/frontend/src/services/userDataService.js"],"sourcesContent":["import axios from 'axios';\n\n// Base URL for API\nconst API_BASE_URL = 'http://localhost:5001';\n\n// Helper function to get auth token\nconst getAuthToken = () => {\n  return localStorage.getItem('weKnowToken');\n};\n\n// Helper function to get auth headers\nconst getAuthHeaders = () => {\n  const token = getAuthToken();\n  return {\n    'Authorization': `Bearer ${token}`,\n    'Content-Type': 'application/json'\n  };\n};\n\n// User Data Service\nclass UserDataService {\n  \n  // Recent Searches\n  async getRecentSearches() {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/user/recent-searches`, {\n        headers: getAuthHeaders()\n      });\n      return response.data.recent_searches || [];\n    } catch (error) {\n      console.error('Error fetching recent searches:', error);\n      return [];\n    }\n  }\n\n  async addRecentSearch(dishName) {\n    try {\n      await axios.post(`${API_BASE_URL}/user/recent-searches`, {\n        dish_name: dishName\n      }, {\n        headers: getAuthHeaders()\n      });\n      return true;\n    } catch (error) {\n      console.error('Error adding recent search:', error);\n      return false;\n    }\n  }\n\n  // Orders\n  async getOrders() {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/user/orders`, {\n        headers: getAuthHeaders()\n      });\n      return response.data.orders || [];\n    } catch (error) {\n      console.error('Error fetching orders:', error);\n      return [];\n    }\n  }\n\n  async addOrder(orderData) {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/user/orders`, orderData, {\n        headers: getAuthHeaders()\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error adding order:', error);\n      throw error;\n    }\n  }\n\n  async updateOrderStatus(orderId, status) {\n    try {\n      const response = await axios.put(`${API_BASE_URL}/user/orders/${orderId}/status`, {\n        status: status\n      }, {\n        headers: getAuthHeaders()\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error updating order status:', error);\n      throw error;\n    }\n  }\n\n  async clearOrders() {\n    try {\n      const response = await axios.delete(`${API_BASE_URL}/user/orders/clear`, {\n        headers: getAuthHeaders()\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error clearing orders:', error);\n      throw error;\n    }\n  }\n\n  // Addresses\n  async getAddresses() {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/user/addresses`, {\n        headers: getAuthHeaders()\n      });\n      return response.data.addresses || [];\n    } catch (error) {\n      console.error('Error fetching addresses:', error);\n      return [];\n    }\n  }\n\n  async addAddress(addressData) {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/user/addresses`, addressData, {\n        headers: getAuthHeaders()\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error adding address:', error);\n      throw error;\n    }\n  }\n\n  // Preferences\n  async getPreferences() {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/user/preferences`, {\n        headers: getAuthHeaders()\n      });\n      return response.data.preferences || {};\n    } catch (error) {\n      console.error('Error fetching preferences:', error);\n      return {};\n    }\n  }\n\n  async updatePreferences(preferencesData) {\n    try {\n      const response = await axios.put(`${API_BASE_URL}/user/preferences`, preferencesData, {\n        headers: getAuthHeaders()\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error updating preferences:', error);\n      throw error;\n    }\n  }\n\n  // User Profile\n  async getUserProfile() {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/auth/me`, {\n        headers: getAuthHeaders()\n      });\n      return response.data.user;\n    } catch (error) {\n      console.error('Error fetching user profile:', error);\n      return null;\n    }\n  }\n\n  // Check if user is authenticated\n  isAuthenticated() {\n    const token = getAuthToken();\n    const user = localStorage.getItem('weKnowUser');\n    return !!(token && user);\n  }\n\n  // Get current user data\n  getCurrentUser() {\n    const user = localStorage.getItem('weKnowUser');\n    return user ? JSON.parse(user) : null;\n  }\n\n  // Clear user data on logout\n  clearUserData() {\n    localStorage.removeItem('weKnowToken');\n    localStorage.removeItem('weKnowUser');\n    // Clear any old localStorage keys that might interfere\n    localStorage.removeItem('weKnowRecentSearches');\n    localStorage.removeItem('weKnowAuthToken');\n  }\n\n  // Clear all app-related localStorage data\n  clearAllAppData() {\n    // Clear all keys that start with 'weKnow'\n    const keysToRemove = [];\n    for (let i = 0; i < localStorage.length; i++) {\n      const key = localStorage.key(i);\n      if (key && key.startsWith('weKnow')) {\n        keysToRemove.push(key);\n      }\n    }\n    keysToRemove.forEach(key => localStorage.removeItem(key));\n  }\n}\n\n// Create singleton instance\nconst userDataService = new UserDataService();\n\nexport default userDataService; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}