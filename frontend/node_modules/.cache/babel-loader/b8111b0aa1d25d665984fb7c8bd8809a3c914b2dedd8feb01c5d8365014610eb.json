{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{BrowserRouter as Router,Routes,Route,Navigate}from'react-router-dom';import axios from'axios';import'./App.css';import userDataService from'./services/userDataService';import{clearAllLocalStorage,logLocalStorageData}from'./utils/clearLocalStorage';// Import components\nimport{LoginModal,SignupModal,LandingPage,SignupScreen}from'./components';import AppLayout from'./components/AppLayout.jsx';// Import pages\nimport HomePage from'./pages/HomePage';import OrderHistory from'./pages/OrderHistory';import SavedAddresses from'./pages/SavedAddresses';import Settings from'./pages/Settings';import TrackOrders from'./pages/TrackOrders';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[isAuthenticated,setIsAuthenticated]=useState(false);const[showLoginForm,setShowLoginForm]=useState(false);const[showSignupScreen,setShowSignupScreen]=useState(false);const[isLoadingUserData,setIsLoadingUserData]=useState(false);const[dishName,setDishName]=useState('');const[servings,setServings]=useState(2);const[ingredients,setIngredients]=useState([]);const[recipeInfo,setRecipeInfo]=useState(null);const[nutritionInfo,setNutritionInfo]=useState(null);const[allergyWarning,setAllergyWarning]=useState(null);const[alternativeSuggestions,setAlternativeSuggestions]=useState(null);const[loading,setLoading]=useState(false);const[error,setError]=useState('');const[successMessage,setSuccessMessage]=useState('');const[recentSearches,setRecentSearches]=useState([]);const[orders,setOrders]=useState([]);// Debug logging for authentication state\nconsole.log('App Debug - isAuthenticated:',isAuthenticated);console.log('App Debug - showLoginForm:',showLoginForm);console.log('App Debug - showSignupScreen:',showSignupScreen);// Function to navigate to landing page (home)\nconst navigateToHome=()=>{console.log('navigateToHome called - setting isAuthenticated to false');setIsAuthenticated(false);setShowLoginForm(false);setShowSignupScreen(false);// Clear any authentication data\nlocalStorage.removeItem('weKnowToken');localStorage.removeItem('weKnowUser');localStorage.removeItem('weKnowOrders');localStorage.removeItem('weKnowRecentSearches');// Scroll to top of the page\nwindow.scrollTo({top:0,behavior:'smooth'});};// Load recent searches from database on component mount\nuseEffect(()=>{const loadRecentSearches=async()=>{if(isAuthenticated){try{const searches=await userDataService.getRecentSearches();setRecentSearches(searches.map(search=>search.dish_name));}catch(error){console.error('Error loading recent searches:',error);}}else{// Clear local state when not authenticated\nsetRecentSearches([]);}};loadRecentSearches();},[isAuthenticated]);// Load orders from database when authenticated\nuseEffect(()=>{const loadOrders=async()=>{if(isAuthenticated){try{const userOrders=await userDataService.getOrders();setOrders(userOrders);// Save to localStorage for other components to access\nlocalStorage.setItem('weKnowOrders',JSON.stringify(userOrders));}catch(error){console.error('Error loading orders:',error);}}else{// Clear local state when not authenticated\nsetOrders([]);localStorage.removeItem('weKnowOrders');}};loadOrders();},[isAuthenticated]);// Check if user is already authenticated\nuseEffect(()=>{const checkAuth=async()=>{const token=localStorage.getItem('weKnowToken');if(token){try{// Verify token with backend\nconst response=await axios.get('http://localhost:8000/auth/me',{headers:{'Authorization':`Bearer ${token}`}});if(response.data.success){setIsAuthenticated(true);// Clear any old localStorage data that might interfere\nlocalStorage.removeItem('weKnowRecentSearches');localStorage.removeItem('weKnowAuthToken');}else{// Token is invalid, clear storage\nuserDataService.clearUserData();setIsAuthenticated(false);}}catch(err){console.error('Auth check error:',err);// Token is invalid, clear storage\nuserDataService.clearUserData();setIsAuthenticated(false);}}};checkAuth();},[]);const handleReplaceIngredients=updatedIngredients=>{setIngredients(updatedIngredients);};const handleLogout=async()=>{try{const token=localStorage.getItem('weKnowToken');if(token){// Call logout endpoint\nawait axios.post('http://localhost:8000/auth/logout',{},{headers:{'Authorization':`Bearer ${token}`}});}}catch(err){console.error('Logout error:',err);// Continue with logout even if API call fails\n}finally{// Clear authentication but keep data in database\nuserDataService.clearUserData();setIsAuthenticated(false);setShowLoginForm(false);setShowSignupScreen(false);setIngredients([]);setRecipeInfo(null);// Recent searches and orders will be cleared by useEffect when isAuthenticated becomes false\n}};const handleSubmit=async function(e){let overrideDishName=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;e.preventDefault();const dishToUse=overrideDishName||dishName;if(!dishToUse.trim()){setError('Please enter a dish name');return;}setLoading(true);setError('');setIngredients([]);setRecipeInfo(null);setNutritionInfo(null);setAllergyWarning(null);setAlternativeSuggestions(null);try{const token=localStorage.getItem('weKnowToken');const headers={'Content-Type':'application/json'};if(token){headers['Authorization']=`Bearer ${token}`;}const response=await axios.post('http://localhost:8000/ingredients',{dish_name:dishToUse.trim(),servings:servings,include_nutrition:true},{headers});console.log('Response received:',response.data);if(response.data.success){console.log('Setting ingredients:',response.data.ingredients);console.log('Setting recipe info:',response.data.recipe_info);console.log('Setting allergy warning:',response.data.allergy_warning);console.log('Setting alternative suggestions:',response.data.alternative_suggestions);setIngredients(response.data.ingredients);setRecipeInfo(response.data.recipe_info);setNutritionInfo(response.data.nutrition||null);setAllergyWarning(response.data.allergy_warning||null);setAlternativeSuggestions(response.data.alternative_suggestions||null);// Add to recent searches in database\nif(isAuthenticated){try{await userDataService.addRecentSearch(dishToUse.trim());// Update local state\nsetRecentSearches(prev=>{const filtered=prev.filter(item=>item!==dishToUse.trim());return[dishToUse.trim(),...filtered].slice(0,4);// Keep only 4 recent searches\n});}catch(error){console.error('Error saving recent search:',error);}}else{// For non-authenticated users, just update local state\nsetRecentSearches(prev=>{const filtered=prev.filter(item=>item!==dishToUse.trim());return[dishToUse.trim(),...filtered].slice(0,4);});}}else{setError(response.data.error||'Failed to fetch ingredients');}}catch(err){var _err$response,_err$response$data,_err$response2;console.error('Error fetching ingredients:',err);if((_err$response=err.response)!==null&&_err$response!==void 0&&(_err$response$data=_err$response.data)!==null&&_err$response$data!==void 0&&_err$response$data.error){setError(err.response.data.error);}else if(((_err$response2=err.response)===null||_err$response2===void 0?void 0:_err$response2.status)===404){setError(`No recipe found for \"${dishToUse}\". Try a different dish name.`);}else{setError('Failed to connect to the server. Please try again.');}}finally{setLoading(false);}};const handleRecentSearchClick=async dish=>{setDishName(dish);// Add to recent searches in database\nif(isAuthenticated){try{await userDataService.addRecentSearch(dish);// Update local state to reflect the new search\nsetRecentSearches(prev=>{const filtered=prev.filter(item=>item!==dish);return[dish,...filtered].slice(0,4);});}catch(error){console.error('Error adding recent search:',error);}}};const addOrder=async order=>{const newOrder={...order,id:Date.now(),timestamp:new Date().toISOString()};if(isAuthenticated){try{// Save to database\nconst token=localStorage.getItem('weKnowToken');const response=await axios.post('http://localhost:8000/user/orders',{dish_name:order.dishName,ingredients:order.ingredients,servings:order.servings},{headers:{'Authorization':`Bearer ${token}`}});if(response.data.success){setOrders(prevOrders=>[...prevOrders,newOrder]);// Save to localStorage\nlocalStorage.setItem('weKnowOrders',JSON.stringify([...orders,newOrder]));}else{console.error('Failed to save order to database:',response.data.error);// Still add to local state even if database save fails\nsetOrders(prevOrders=>[...prevOrders,newOrder]);}}catch(error){console.error('Error saving order to database:',error);// Still add to local state even if database save fails\nsetOrders(prevOrders=>[...prevOrders,newOrder]);}}else{// For non-authenticated users, just add to local state\nsetOrders(prevOrders=>[...prevOrders,newOrder]);}// Show success message and refresh the search page after order is placed\nsetError('');// Clear any existing errors\nsetTimeout(()=>{// Show a brief success message\nsetSuccessMessage('âœ… Order placed successfully! Refreshing search page...');setTimeout(()=>{// Clear everything and refresh the search page\nsetDishName('');setIngredients([]);setRecipeInfo(null);setError('');setSuccessMessage('');setLoading(false);},1500);// Show success message for 1.5 seconds\n},500);// Small delay to show order success\n};const deleteIngredient=index=>{setIngredients(prevIngredients=>{const newIngredients=[...prevIngredients];newIngredients.splice(index,1);return newIngredients;});};const dishInputRef=useRef(null);useEffect(()=>{if(dishInputRef.current){dishInputRef.current.focus();}},[dishName]);return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[isAuthenticated?/*#__PURE__*/_jsx(AppLayout,{user:JSON.parse(localStorage.getItem('weKnowUser')||'{}'),handleLogout:handleLogout,children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(HomePage,{dish:dishName,setDish:setDishName,ingredients:ingredients,loading:loading,setLoading:setLoading,error:error,setError:setError,successMessage:successMessage,setSuccessMessage:setSuccessMessage,handleSubmit:handleSubmit,onReplaceIngredients:handleReplaceIngredients,handleRecentSearchClick:handleRecentSearchClick,recentSearches:recentSearches,recipeInfo:recipeInfo,nutritionInfo:nutritionInfo,allergyWarning:allergyWarning,alternativeSuggestions:alternativeSuggestions,servings:servings,setServings:setServings,orders:orders,addOrder:addOrder,deleteIngredient:deleteIngredient})}),/*#__PURE__*/_jsx(Route,{path:\"/order-history\",element:/*#__PURE__*/_jsx(OrderHistory,{})}),/*#__PURE__*/_jsx(Route,{path:\"/saved-addresses\",element:/*#__PURE__*/_jsx(SavedAddresses,{})}),/*#__PURE__*/_jsx(Route,{path:\"/track-orders\",element:/*#__PURE__*/_jsx(TrackOrders,{})}),/*#__PURE__*/_jsx(Route,{path:\"/settings\",element:/*#__PURE__*/_jsx(Settings,{})}),/*#__PURE__*/_jsx(Route,{path:\"*\",element:/*#__PURE__*/_jsx(Navigate,{to:\"/\",replace:true})})]})}):showSignupScreen?/*#__PURE__*/_jsx(SignupModal,{isOpen:showSignupScreen,onClose:()=>setShowSignupScreen(false),onSignup:userData=>{setIsAuthenticated(true);setShowSignupScreen(false);// Data will be loaded from database via useEffect\n}}):/*#__PURE__*/_jsx(LandingPage,{onLoginClick:()=>setShowLoginForm(true),onSignupClick:()=>setShowSignupScreen(true),navigateToHome:navigateToHome}),showLoginForm&&/*#__PURE__*/_jsx(LoginModal,{isOpen:showLoginForm,onClose:()=>setShowLoginForm(false),onLogin:()=>{console.log('onLogin callback called - setting isAuthenticated to true');setIsAuthenticated(true);setShowLoginForm(false);// Close the login modal\n// Data will be loaded from database via useEffect\n}})]})});}export default App;","map":{"version":3,"names":["React","useState","useEffect","useRef","BrowserRouter","Router","Routes","Route","Navigate","axios","userDataService","clearAllLocalStorage","logLocalStorageData","LoginModal","SignupModal","LandingPage","SignupScreen","AppLayout","HomePage","OrderHistory","SavedAddresses","Settings","TrackOrders","jsx","_jsx","jsxs","_jsxs","App","isAuthenticated","setIsAuthenticated","showLoginForm","setShowLoginForm","showSignupScreen","setShowSignupScreen","isLoadingUserData","setIsLoadingUserData","dishName","setDishName","servings","setServings","ingredients","setIngredients","recipeInfo","setRecipeInfo","nutritionInfo","setNutritionInfo","allergyWarning","setAllergyWarning","alternativeSuggestions","setAlternativeSuggestions","loading","setLoading","error","setError","successMessage","setSuccessMessage","recentSearches","setRecentSearches","orders","setOrders","console","log","navigateToHome","localStorage","removeItem","window","scrollTo","top","behavior","loadRecentSearches","searches","getRecentSearches","map","search","dish_name","loadOrders","userOrders","getOrders","setItem","JSON","stringify","checkAuth","token","getItem","response","get","headers","data","success","clearUserData","err","handleReplaceIngredients","updatedIngredients","handleLogout","post","handleSubmit","e","overrideDishName","arguments","length","undefined","preventDefault","dishToUse","trim","include_nutrition","recipe_info","allergy_warning","alternative_suggestions","nutrition","addRecentSearch","prev","filtered","filter","item","slice","_err$response","_err$response$data","_err$response2","status","handleRecentSearchClick","dish","addOrder","order","newOrder","id","Date","now","timestamp","toISOString","prevOrders","setTimeout","deleteIngredient","index","prevIngredients","newIngredients","splice","dishInputRef","current","focus","children","className","user","parse","path","element","setDish","onReplaceIngredients","to","replace","isOpen","onClose","onSignup","userData","onLoginClick","onSignupClick","onLogin"],"sources":["/Users/roshan/Desktop/we_know_sample_2/frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './App.css';\nimport userDataService from './services/userDataService';\nimport { clearAllLocalStorage, logLocalStorageData } from './utils/clearLocalStorage';\n\n// Import components\nimport { LoginModal, SignupModal, LandingPage, SignupScreen } from './components';\nimport AppLayout from './components/AppLayout.jsx';\n\n// Import pages\nimport HomePage from './pages/HomePage';\nimport OrderHistory from './pages/OrderHistory';\nimport SavedAddresses from './pages/SavedAddresses';\nimport Settings from './pages/Settings';\nimport TrackOrders from './pages/TrackOrders';\n\nfunction App() {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [showLoginForm, setShowLoginForm] = useState(false);\n  const [showSignupScreen, setShowSignupScreen] = useState(false);\n  const [isLoadingUserData, setIsLoadingUserData] = useState(false);\n  const [dishName, setDishName] = useState('');\n  const [servings, setServings] = useState(2);\n  const [ingredients, setIngredients] = useState([]);\n  const [recipeInfo, setRecipeInfo] = useState(null);\n  const [nutritionInfo, setNutritionInfo] = useState(null);\n  const [allergyWarning, setAllergyWarning] = useState(null);\n  const [alternativeSuggestions, setAlternativeSuggestions] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n\n  const [recentSearches, setRecentSearches] = useState([]);\n  const [orders, setOrders] = useState([]);\n\n  // Debug logging for authentication state\n  console.log('App Debug - isAuthenticated:', isAuthenticated);\n  console.log('App Debug - showLoginForm:', showLoginForm);\n  console.log('App Debug - showSignupScreen:', showSignupScreen);\n\n  // Function to navigate to landing page (home)\n  const navigateToHome = () => {\n    console.log('navigateToHome called - setting isAuthenticated to false');\n    setIsAuthenticated(false);\n    setShowLoginForm(false);\n    setShowSignupScreen(false);\n    // Clear any authentication data\n    localStorage.removeItem('weKnowToken');\n    localStorage.removeItem('weKnowUser');\n    localStorage.removeItem('weKnowOrders');\n    localStorage.removeItem('weKnowRecentSearches');\n    // Scroll to top of the page\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n  \n  // Load recent searches from database on component mount\n  useEffect(() => {\n    const loadRecentSearches = async () => {\n      if (isAuthenticated) {\n        try {\n          const searches = await userDataService.getRecentSearches();\n          setRecentSearches(searches.map(search => search.dish_name));\n        } catch (error) {\n          console.error('Error loading recent searches:', error);\n        }\n      } else {\n        // Clear local state when not authenticated\n        setRecentSearches([]);\n      }\n    };\n    \n    loadRecentSearches();\n  }, [isAuthenticated]);\n\n  // Load orders from database when authenticated\n  useEffect(() => {\n    const loadOrders = async () => {\n      if (isAuthenticated) {\n        try {\n          const userOrders = await userDataService.getOrders();\n          setOrders(userOrders);\n          // Save to localStorage for other components to access\n          localStorage.setItem('weKnowOrders', JSON.stringify(userOrders));\n        } catch (error) {\n          console.error('Error loading orders:', error);\n        }\n      } else {\n        // Clear local state when not authenticated\n        setOrders([]);\n        localStorage.removeItem('weKnowOrders');\n      }\n    };\n    \n    loadOrders();\n  }, [isAuthenticated]);\n\n  // Check if user is already authenticated\n  useEffect(() => {\n    const checkAuth = async () => {\n      const token = localStorage.getItem('weKnowToken');\n      if (token) {\n        try {\n          // Verify token with backend\n          const response = await axios.get('http://localhost:8000/auth/me', {\n            headers: {\n              'Authorization': `Bearer ${token}`\n            }\n          });\n          \n          if (response.data.success) {\n            setIsAuthenticated(true);\n            // Clear any old localStorage data that might interfere\n            localStorage.removeItem('weKnowRecentSearches');\n            localStorage.removeItem('weKnowAuthToken');\n          } else {\n            // Token is invalid, clear storage\n            userDataService.clearUserData();\n            setIsAuthenticated(false);\n          }\n        } catch (err) {\n          console.error('Auth check error:', err);\n          // Token is invalid, clear storage\n          userDataService.clearUserData();\n          setIsAuthenticated(false);\n        }\n      }\n    };\n    \n    checkAuth();\n  }, []);\n\n  const handleReplaceIngredients = (updatedIngredients) => {\n    setIngredients(updatedIngredients);\n  };\n\n  const handleLogout = async () => {\n    try {\n      const token = localStorage.getItem('weKnowToken');\n      if (token) {\n        // Call logout endpoint\n        await axios.post('http://localhost:8000/auth/logout', {}, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n      }\n    } catch (err) {\n      console.error('Logout error:', err);\n      // Continue with logout even if API call fails\n    } finally {\n      // Clear authentication but keep data in database\n      userDataService.clearUserData();\n      setIsAuthenticated(false);\n      setShowLoginForm(false);\n      setShowSignupScreen(false);\n      setIngredients([]);\n      setRecipeInfo(null);\n      // Recent searches and orders will be cleared by useEffect when isAuthenticated becomes false\n    }\n  };\n\n  const handleSubmit = async (e, overrideDishName = null) => {\n    e.preventDefault();\n    \n    const dishToUse = overrideDishName || dishName;\n    \n    if (!dishToUse.trim()) {\n      setError('Please enter a dish name');\n      return;\n    }\n\n    setLoading(true);\n    setError('');\n    setIngredients([]);\n    setRecipeInfo(null);\n    setNutritionInfo(null);\n    setAllergyWarning(null);\n    setAlternativeSuggestions(null);\n\n    try {\n      const token = localStorage.getItem('weKnowToken');\n      const headers = {\n        'Content-Type': 'application/json'\n      };\n      \n      if (token) {\n        headers['Authorization'] = `Bearer ${token}`;\n      }\n\n      const response = await axios.post('http://localhost:8000/ingredients', {\n        dish_name: dishToUse.trim(),\n        servings: servings,\n        include_nutrition: true\n      }, { headers });\n\n      console.log('Response received:', response.data);\n\n      if (response.data.success) {\n        console.log('Setting ingredients:', response.data.ingredients);\n        console.log('Setting recipe info:', response.data.recipe_info);\n        console.log('Setting allergy warning:', response.data.allergy_warning);\n        console.log('Setting alternative suggestions:', response.data.alternative_suggestions);\n        setIngredients(response.data.ingredients);\n        setRecipeInfo(response.data.recipe_info);\n        setNutritionInfo(response.data.nutrition || null);\n        setAllergyWarning(response.data.allergy_warning || null);\n        setAlternativeSuggestions(response.data.alternative_suggestions || null);\n        \n        // Add to recent searches in database\n        if (isAuthenticated) {\n          try {\n            await userDataService.addRecentSearch(dishToUse.trim());\n            // Update local state\n            setRecentSearches(prev => {\n              const filtered = prev.filter(item => item !== dishToUse.trim());\n              return [dishToUse.trim(), ...filtered].slice(0, 4); // Keep only 4 recent searches\n            });\n          } catch (error) {\n            console.error('Error saving recent search:', error);\n          }\n        } else {\n          // For non-authenticated users, just update local state\n          setRecentSearches(prev => {\n            const filtered = prev.filter(item => item !== dishToUse.trim());\n            return [dishToUse.trim(), ...filtered].slice(0, 4);\n          });\n        }\n      } else {\n        setError(response.data.error || 'Failed to fetch ingredients');\n      }\n    } catch (err) {\n      console.error('Error fetching ingredients:', err);\n      if (err.response?.data?.error) {\n        setError(err.response.data.error);\n      } else if (err.response?.status === 404) {\n        setError(`No recipe found for \"${dishToUse}\". Try a different dish name.`);\n      } else {\n        setError('Failed to connect to the server. Please try again.');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n\n\n  const handleRecentSearchClick = async (dish) => {\n    setDishName(dish);\n    \n    // Add to recent searches in database\n    if (isAuthenticated) {\n      try {\n        await userDataService.addRecentSearch(dish);\n        // Update local state to reflect the new search\n        setRecentSearches(prev => {\n          const filtered = prev.filter(item => item !== dish);\n          return [dish, ...filtered].slice(0, 4);\n        });\n      } catch (error) {\n        console.error('Error adding recent search:', error);\n      }\n    }\n  };\n\n  const addOrder = async (order) => {\n    const newOrder = {\n      ...order,\n      id: Date.now(),\n      timestamp: new Date().toISOString()\n    };\n\n    if (isAuthenticated) {\n      try {\n        // Save to database\n        const token = localStorage.getItem('weKnowToken');\n        const response = await axios.post('http://localhost:8000/user/orders', {\n          dish_name: order.dishName,\n          ingredients: order.ingredients,\n          servings: order.servings\n        }, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n\n        if (response.data.success) {\n          setOrders(prevOrders => [...prevOrders, newOrder]);\n          // Save to localStorage\n          localStorage.setItem('weKnowOrders', JSON.stringify([...orders, newOrder]));\n        } else {\n          console.error('Failed to save order to database:', response.data.error);\n          // Still add to local state even if database save fails\n          setOrders(prevOrders => [...prevOrders, newOrder]);\n        }\n      } catch (error) {\n        console.error('Error saving order to database:', error);\n        // Still add to local state even if database save fails\n        setOrders(prevOrders => [...prevOrders, newOrder]);\n      }\n    } else {\n      // For non-authenticated users, just add to local state\n      setOrders(prevOrders => [...prevOrders, newOrder]);\n    }\n\n    // Show success message and refresh the search page after order is placed\n    setError(''); // Clear any existing errors\n    setTimeout(() => {\n      // Show a brief success message\n      setSuccessMessage('âœ… Order placed successfully! Refreshing search page...');\n      \n      setTimeout(() => {\n        // Clear everything and refresh the search page\n        setDishName('');\n        setIngredients([]);\n        setRecipeInfo(null);\n        setError('');\n        setSuccessMessage('');\n        setLoading(false);\n      }, 1500); // Show success message for 1.5 seconds\n    }, 500); // Small delay to show order success\n  };\n\n  const deleteIngredient = (index) => {\n    setIngredients(prevIngredients => {\n      const newIngredients = [...prevIngredients];\n      newIngredients.splice(index, 1);\n      return newIngredients;\n    });\n  };\n\n\n  const dishInputRef = useRef(null);\n\n  useEffect(() => {\n    if (dishInputRef.current) {\n      dishInputRef.current.focus();\n    }\n  }, [dishName]);\n\n  return (\n    <Router>\n      <div className=\"App\">\n\n        {isAuthenticated ? (\n          <AppLayout \n            user={JSON.parse(localStorage.getItem('weKnowUser') || '{}')}\n            handleLogout={handleLogout}\n          >\n            <Routes>\n              <Route path=\"/\" element={\n                <HomePage \n                  dish={dishName}\n                  setDish={setDishName}\n                  ingredients={ingredients}\n                  loading={loading}\n                  setLoading={setLoading}\n                  error={error}\n                  setError={setError}\n                  successMessage={successMessage}\n                  setSuccessMessage={setSuccessMessage}\n                  handleSubmit={handleSubmit}\n                  onReplaceIngredients={handleReplaceIngredients}\n                  handleRecentSearchClick={handleRecentSearchClick}\n                  recentSearches={recentSearches}\n                  recipeInfo={recipeInfo}\n                  nutritionInfo={nutritionInfo}\n                  allergyWarning={allergyWarning}\n                  alternativeSuggestions={alternativeSuggestions}\n                  servings={servings}\n                  setServings={setServings}\n                  orders={orders}\n                  addOrder={addOrder}\n                  deleteIngredient={deleteIngredient}\n                />\n              } />\n              <Route path=\"/order-history\" element={<OrderHistory />} />\n              <Route path=\"/saved-addresses\" element={<SavedAddresses />} />\n              <Route path=\"/track-orders\" element={<TrackOrders />} />\n              <Route path=\"/settings\" element={<Settings />} />\n              <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\n            </Routes>\n          </AppLayout>\n        ) : showSignupScreen ? (\n          <SignupModal\n            isOpen={showSignupScreen}\n            onClose={() => setShowSignupScreen(false)}\n            onSignup={(userData) => {\n              setIsAuthenticated(true);\n              setShowSignupScreen(false);\n              // Data will be loaded from database via useEffect\n            }}\n          />\n        ) : (\n          <LandingPage \n            onLoginClick={() => setShowLoginForm(true)}\n            onSignupClick={() => setShowSignupScreen(true)}\n            navigateToHome={navigateToHome}\n          />\n        )}\n\n        {/* Login Form Modal */}\n        {showLoginForm && (\n          <LoginModal\n            isOpen={showLoginForm}\n            onClose={() => setShowLoginForm(false)}\n            onLogin={() => {\n              console.log('onLogin callback called - setting isAuthenticated to true');\n              setIsAuthenticated(true);\n              setShowLoginForm(false); // Close the login modal\n              // Data will be loaded from database via useEffect\n            }}\n          />\n        )}\n\n\n      </div>\n    </Router>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}