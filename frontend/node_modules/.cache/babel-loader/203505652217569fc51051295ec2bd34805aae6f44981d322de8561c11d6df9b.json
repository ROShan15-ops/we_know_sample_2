{"ast":null,"code":"var _jsxFileName = \"/Users/roshan/Desktop/we knowsample/frontend/src/components/GroceryOrderButton.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GroceryOrderButton = ({\n  ingredients,\n  dishName\n}) => {\n  // Grocery app configurations with cart APIs and deep links\n  const groceryApps = {\n    blinkit: {\n      name: 'Blinkit',\n      baseUrl: 'https://www.blinkit.com/search?q=',\n      cartUrl: 'https://blinkit.com/cart/add',\n      deepLink: 'blinkit://cart/add',\n      icon: '🛒',\n      color: '#ff6b35',\n      hasCartAPI: true\n    },\n    zepto: {\n      name: 'Zepto',\n      baseUrl: 'https://www.zepto.in/search?q=',\n      cartUrl: 'https://www.zepto.in/cart/add',\n      deepLink: 'zepto://cart/add',\n      icon: '⚡',\n      color: '#00b894',\n      hasCartAPI: true\n    },\n    bigbasket: {\n      name: 'BigBasket',\n      baseUrl: 'https://www.bigbasket.com/ps/?q=',\n      cartUrl: 'https://www.bigbasket.com/cart/add',\n      deepLink: 'bigbasket://cart/add',\n      icon: '🛍️',\n      color: '#0984e3',\n      hasCartAPI: true\n    }\n  };\n\n  // Function to create search query from ingredients array\n  const createSearchQuery = ingredients => {\n    if (!ingredients || !Array.isArray(ingredients) || ingredients.length === 0) {\n      return null;\n    }\n\n    // Extract ingredient names and clean them\n    const ingredientNames = ingredients.map(ingredient => {\n      // Handle both string and object formats\n      const ingredientName = typeof ingredient === 'string' ? ingredient : ingredient.ingredient || ingredient.name || '';\n\n      // Clean the ingredient name (remove quantities, units, etc.)\n      return ingredientName.replace(/[\\d.,\\/\\s]+(?:grams?|g|kilos?|kg|ounces?|oz|pounds?|lbs?|cups?|tablespoons?|tbsp|teaspoons?|tsp|ml|l|pieces?|pcs?)/gi, '').replace(/[^\\w\\s]/g, '').trim();\n    }).filter(name => name.length > 0); // Remove empty strings\n\n    return ingredientNames.join('+');\n  };\n\n  // Function to open grocery app in new tab\n  const openGroceryApp = appKey => {\n    const app = groceryApps[appKey];\n    const searchQuery = createSearchQuery(ingredients);\n    if (!searchQuery) {\n      alert('No ingredients available for ordering. Please try again.');\n      return;\n    }\n    const url = `${app.baseUrl}${encodeURIComponent(searchQuery)}`;\n    window.open(url, '_blank', 'noopener,noreferrer');\n  };\n\n  // Check if ingredients are available\n  const hasIngredients = ingredients && Array.isArray(ingredients) && ingredients.length > 0;\n  const searchQuery = createSearchQuery(ingredients);\n  if (!hasIngredients) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grocery-order-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-ingredients-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u26A0\\uFE0F No ingredients available for this dish.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please try selecting a different dish or contact support.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grocery-order-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grocery-order-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDED2 Order Ingredients\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Get fresh ingredients delivered to your doorstep\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ingredients-preview\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Ingredients to order:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ingredients-list\",\n        children: ingredients.map((ingredient, index) => {\n          const ingredientName = typeof ingredient === 'string' ? ingredient : ingredient.ingredient || ingredient.name || 'Unknown ingredient';\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ingredient-tag\",\n            children: ingredientName\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grocery-apps-grid\",\n      children: Object.entries(groceryApps).map(([appKey, app]) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"grocery-app-button\",\n        onClick: () => openGroceryApp(appKey),\n        style: {\n          '--app-color': app.color\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"app-icon\",\n          children: app.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"app-name\",\n          children: [\"Order on \", app.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"app-subtitle\",\n          children: \"Fast delivery\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)]\n      }, appKey, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-preview\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"search-preview-text\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Search query:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), \" \", searchQuery]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_c = GroceryOrderButton;\nexport default GroceryOrderButton;\nvar _c;\n$RefreshReg$(_c, \"GroceryOrderButton\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","GroceryOrderButton","ingredients","dishName","groceryApps","blinkit","name","baseUrl","cartUrl","deepLink","icon","color","hasCartAPI","zepto","bigbasket","createSearchQuery","Array","isArray","length","ingredientNames","map","ingredient","ingredientName","replace","trim","filter","join","openGroceryApp","appKey","app","searchQuery","alert","url","encodeURIComponent","window","open","hasIngredients","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","Object","entries","onClick","style","_c","$RefreshReg$"],"sources":["/Users/roshan/Desktop/we knowsample/frontend/src/components/GroceryOrderButton.jsx"],"sourcesContent":["import React from 'react';\n\nconst GroceryOrderButton = ({ ingredients, dishName }) => {\n  // Grocery app configurations with cart APIs and deep links\n  const groceryApps = {\n    blinkit: {\n      name: 'Blinkit',\n      baseUrl: 'https://www.blinkit.com/search?q=',\n      cartUrl: 'https://blinkit.com/cart/add',\n      deepLink: 'blinkit://cart/add',\n      icon: '🛒',\n      color: '#ff6b35',\n      hasCartAPI: true\n    },\n    zepto: {\n      name: 'Zepto',\n      baseUrl: 'https://www.zepto.in/search?q=',\n      cartUrl: 'https://www.zepto.in/cart/add',\n      deepLink: 'zepto://cart/add',\n      icon: '⚡',\n      color: '#00b894',\n      hasCartAPI: true\n    },\n    bigbasket: {\n      name: 'BigBasket',\n      baseUrl: 'https://www.bigbasket.com/ps/?q=',\n      cartUrl: 'https://www.bigbasket.com/cart/add',\n      deepLink: 'bigbasket://cart/add',\n      icon: '🛍️',\n      color: '#0984e3',\n      hasCartAPI: true\n    }\n  };\n\n  // Function to create search query from ingredients array\n  const createSearchQuery = (ingredients) => {\n    if (!ingredients || !Array.isArray(ingredients) || ingredients.length === 0) {\n      return null;\n    }\n\n    // Extract ingredient names and clean them\n    const ingredientNames = ingredients.map(ingredient => {\n      // Handle both string and object formats\n      const ingredientName = typeof ingredient === 'string' \n        ? ingredient \n        : ingredient.ingredient || ingredient.name || '';\n      \n      // Clean the ingredient name (remove quantities, units, etc.)\n      return ingredientName\n        .replace(/[\\d.,\\/\\s]+(?:grams?|g|kilos?|kg|ounces?|oz|pounds?|lbs?|cups?|tablespoons?|tbsp|teaspoons?|tsp|ml|l|pieces?|pcs?)/gi, '')\n        .replace(/[^\\w\\s]/g, '')\n        .trim();\n    })\n    .filter(name => name.length > 0); // Remove empty strings\n\n    return ingredientNames.join('+');\n  };\n\n  // Function to open grocery app in new tab\n  const openGroceryApp = (appKey) => {\n    const app = groceryApps[appKey];\n    const searchQuery = createSearchQuery(ingredients);\n    \n    if (!searchQuery) {\n      alert('No ingredients available for ordering. Please try again.');\n      return;\n    }\n\n    const url = `${app.baseUrl}${encodeURIComponent(searchQuery)}`;\n    window.open(url, '_blank', 'noopener,noreferrer');\n  };\n\n  // Check if ingredients are available\n  const hasIngredients = ingredients && Array.isArray(ingredients) && ingredients.length > 0;\n  const searchQuery = createSearchQuery(ingredients);\n\n  if (!hasIngredients) {\n    return (\n      <div className=\"grocery-order-section\">\n        <div className=\"no-ingredients-message\">\n          <p>⚠️ No ingredients available for this dish.</p>\n          <p>Please try selecting a different dish or contact support.</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"grocery-order-section\">\n      <div className=\"grocery-order-header\">\n        <h3>🛒 Order Ingredients</h3>\n        <p>Get fresh ingredients delivered to your doorstep</p>\n      </div>\n\n      <div className=\"ingredients-preview\">\n        <h4>Ingredients to order:</h4>\n        <div className=\"ingredients-list\">\n          {ingredients.map((ingredient, index) => {\n            const ingredientName = typeof ingredient === 'string' \n              ? ingredient \n              : ingredient.ingredient || ingredient.name || 'Unknown ingredient';\n            return (\n              <span key={index} className=\"ingredient-tag\">\n                {ingredientName}\n              </span>\n            );\n          })}\n        </div>\n      </div>\n\n      <div className=\"grocery-apps-grid\">\n        {Object.entries(groceryApps).map(([appKey, app]) => (\n          <button\n            key={appKey}\n            className=\"grocery-app-button\"\n            onClick={() => openGroceryApp(appKey)}\n            style={{ '--app-color': app.color }}\n          >\n            <span className=\"app-icon\">{app.icon}</span>\n            <span className=\"app-name\">Order on {app.name}</span>\n            <span className=\"app-subtitle\">Fast delivery</span>\n          </button>\n        ))}\n      </div>\n\n      <div className=\"search-preview\">\n        <p className=\"search-preview-text\">\n          <strong>Search query:</strong> {searchQuery}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default GroceryOrderButton; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}