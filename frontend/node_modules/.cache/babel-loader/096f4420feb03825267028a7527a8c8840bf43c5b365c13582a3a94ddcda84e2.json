{"ast":null,"code":"var _jsxFileName = \"/Users/roshan/Desktop/we knowsample/frontend/src/components/SignupModal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignupModal = ({\n  isOpen,\n  onClose,\n  onSignup\n}) => {\n  _s();\n  const [signupData, setSignupData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [authError, setAuthError] = useState('');\n  const nameRef = useRef(null);\n  const emailRef = useRef(null);\n  const passwordRef = useRef(null);\n  const confirmPasswordRef = useRef(null);\n  useEffect(() => {\n    if (isOpen && nameRef.current) {\n      setTimeout(() => {\n        nameRef.current.focus();\n      }, 100);\n    }\n  }, [isOpen]);\n  const handleNameChange = useCallback(e => {\n    setSignupData(prev => ({\n      ...prev,\n      name: e.target.value\n    }));\n  }, []);\n  const handleEmailChange = useCallback(e => {\n    setSignupData(prev => ({\n      ...prev,\n      email: e.target.value\n    }));\n  }, []);\n  const handlePasswordChange = useCallback(e => {\n    setSignupData(prev => ({\n      ...prev,\n      password: e.target.value\n    }));\n  }, []);\n  const handleConfirmPasswordChange = useCallback(e => {\n    setSignupData(prev => ({\n      ...prev,\n      confirmPassword: e.target.value\n    }));\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setAuthError('');\n    if (!signupData.name || !signupData.email || !signupData.password || !signupData.confirmPassword) {\n      setAuthError('Please fill in all fields');\n      return;\n    }\n    if (signupData.password !== signupData.confirmPassword) {\n      setAuthError('Passwords do not match');\n      return;\n    }\n    if (signupData.password.length < 6) {\n      setAuthError('Password must be at least 6 characters');\n      return;\n    }\n    try {\n      const response = await axios.post('/auth/register', {\n        name: signupData.name,\n        email: signupData.email,\n        password: signupData.password\n      });\n      if (response.data.success) {\n        localStorage.setItem('weKnowToken', response.data.access_token);\n        localStorage.setItem('weKnowUser', JSON.stringify(response.data.user));\n        onSignup();\n        setSignupData({\n          name: '',\n          email: '',\n          password: '',\n          confirmPassword: ''\n        });\n      } else {\n        setAuthError(response.data.error || 'Registration failed');\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Registration error:', err);\n      if ((_err$response = err.response) !== null && _err$response !== void 0 && (_err$response$data = _err$response.data) !== null && _err$response$data !== void 0 && _err$response$data.error) {\n        setAuthError(err.response.data.error);\n      } else {\n        setAuthError('Failed to connect to the server. Please try again.');\n      }\n    }\n  };\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-button\",\n        onClick: onClose,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Full Name\",\n            value: signupData.name,\n            onChange: handleNameChange,\n            required: true,\n            autoComplete: \"name\",\n            ref: nameRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"Email\",\n            value: signupData.email,\n            onChange: handleEmailChange,\n            required: true,\n            autoComplete: \"email\",\n            ref: emailRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Password\",\n            value: signupData.password,\n            onChange: handlePasswordChange,\n            required: true,\n            autoComplete: \"new-password\",\n            ref: passwordRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Confirm Password\",\n            value: signupData.confirmPassword,\n            onChange: handleConfirmPasswordChange,\n            required: true,\n            autoComplete: \"new-password\",\n            ref: confirmPasswordRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), authError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-error\",\n          children: authError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"auth-submit-button\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, \"signin-modal\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(SignupModal, \"MF3OWUpqvIu996D1vhl7U95s2DE=\");\n_c = SignupModal;\nexport default SignupModal;\nvar _c;\n$RefreshReg$(_c, \"SignupModal\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","axios","jsxDEV","_jsxDEV","SignupModal","isOpen","onClose","onSignup","_s","signupData","setSignupData","name","email","password","confirmPassword","authError","setAuthError","nameRef","emailRef","passwordRef","confirmPasswordRef","current","setTimeout","focus","handleNameChange","e","prev","target","value","handleEmailChange","handlePasswordChange","handleConfirmPasswordChange","handleSubmit","preventDefault","length","response","post","data","success","localStorage","setItem","access_token","JSON","stringify","user","error","err","_err$response","_err$response$data","console","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","autoComplete","ref","_c","$RefreshReg$"],"sources":["/Users/roshan/Desktop/we knowsample/frontend/src/components/SignupModal.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport axios from 'axios';\n\nconst SignupModal = ({ isOpen, onClose, onSignup }) => {\n  const [signupData, setSignupData] = useState({ name: '', email: '', password: '', confirmPassword: '' });\n  const [authError, setAuthError] = useState('');\n  const nameRef = useRef(null);\n  const emailRef = useRef(null);\n  const passwordRef = useRef(null);\n  const confirmPasswordRef = useRef(null);\n\n  useEffect(() => {\n    if (isOpen && nameRef.current) {\n      setTimeout(() => {\n        nameRef.current.focus();\n      }, 100);\n    }\n  }, [isOpen]);\n\n  const handleNameChange = useCallback((e) => {\n    setSignupData(prev => ({...prev, name: e.target.value}));\n  }, []);\n\n  const handleEmailChange = useCallback((e) => {\n    setSignupData(prev => ({...prev, email: e.target.value}));\n  }, []);\n\n  const handlePasswordChange = useCallback((e) => {\n    setSignupData(prev => ({...prev, password: e.target.value}));\n  }, []);\n\n  const handleConfirmPasswordChange = useCallback((e) => {\n    setSignupData(prev => ({...prev, confirmPassword: e.target.value}));\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setAuthError('');\n    \n    if (!signupData.name || !signupData.email || !signupData.password || !signupData.confirmPassword) {\n      setAuthError('Please fill in all fields');\n      return;\n    }\n\n    if (signupData.password !== signupData.confirmPassword) {\n      setAuthError('Passwords do not match');\n      return;\n    }\n\n    if (signupData.password.length < 6) {\n      setAuthError('Password must be at least 6 characters');\n      return;\n    }\n\n    try {\n      const response = await axios.post('/auth/register', {\n        name: signupData.name,\n        email: signupData.email,\n        password: signupData.password\n      });\n\n      if (response.data.success) {\n        localStorage.setItem('weKnowToken', response.data.access_token);\n        localStorage.setItem('weKnowUser', JSON.stringify(response.data.user));\n        onSignup();\n        setSignupData({ name: '', email: '', password: '', confirmPassword: '' });\n      } else {\n        setAuthError(response.data.error || 'Registration failed');\n      }\n    } catch (err) {\n      console.error('Registration error:', err);\n      if (err.response?.data?.error) {\n        setAuthError(err.response.data.error);\n      } else {\n        setAuthError('Failed to connect to the server. Please try again.');\n      }\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"modal-overlay\" key=\"signin-modal\">\n      <div className=\"auth-modal\">\n        <button className=\"close-button\" onClick={onClose}>×</button>\n        <h2>Sign Up</h2>\n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              placeholder=\"Full Name\"\n              value={signupData.name}\n              onChange={handleNameChange}\n              required\n              autoComplete=\"name\"\n              ref={nameRef}\n            />\n          </div>\n          <div className=\"form-group\">\n            <input\n              type=\"email\"\n              placeholder=\"Email\"\n              value={signupData.email}\n              onChange={handleEmailChange}\n              required\n              autoComplete=\"email\"\n              ref={emailRef}\n            />\n          </div>\n          <div className=\"form-group\">\n            <input\n              type=\"password\"\n              placeholder=\"Password\"\n              value={signupData.password}\n              onChange={handlePasswordChange}\n              required\n              autoComplete=\"new-password\"\n              ref={passwordRef}\n            />\n          </div>\n          <div className=\"form-group\">\n            <input\n              type=\"password\"\n              placeholder=\"Confirm Password\"\n              value={signupData.confirmPassword}\n              onChange={handleConfirmPasswordChange}\n              required\n              autoComplete=\"new-password\"\n              ref={confirmPasswordRef}\n            />\n          </div>\n          {authError && <div className=\"auth-error\">{authError}</div>}\n          <button type=\"submit\" className=\"auth-submit-button\">Sign Up</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default SignupModal; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}