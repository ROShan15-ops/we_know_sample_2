{"ast":null,"code":"// Grocery Cart Service - Handles cart operations for different grocery apps\n\nclass GroceryCartService {\n  constructor() {\n    this.apps = {\n      blinkit: {\n        name: 'Blinkit',\n        webCartUrl: 'https://blinkit.com/cart',\n        appDeepLink: 'blinkit://cart',\n        searchUrl: 'https://blinkit.com/search?q=',\n        hasPublicAPI: false\n      },\n      zepto: {\n        name: 'Zepto',\n        webCartUrl: 'https://www.zepto.in/cart',\n        appDeepLink: 'zepto://cart',\n        searchUrl: 'https://www.zepto.in/search?q=',\n        hasPublicAPI: false\n      },\n      bigbasket: {\n        name: 'BigBasket',\n        webCartUrl: 'https://www.bigbasket.com/cart',\n        appDeepLink: 'bigbasket://cart',\n        searchUrl: 'https://www.bigbasket.com/ps/?q=',\n        hasPublicAPI: false\n      }\n    };\n  }\n\n  // Add ingredients to cart using the best available method\n  async addToCart(appKey, ingredients) {\n    const app = this.apps[appKey];\n    if (!app) {\n      throw new Error(`Unknown grocery app: ${appKey}`);\n    }\n    try {\n      // Method 1: Try backend cart API first\n      const apiResult = await this.addToCartViaAPI(appKey, ingredients);\n      if (apiResult.success) {\n        return apiResult;\n      }\n\n      // Method 2: Try mobile app deep link\n      if (this.isMobileDevice()) {\n        const deepLinkSuccess = await this.tryDeepLink(app.appDeepLink);\n        if (deepLinkSuccess) {\n          return {\n            success: true,\n            method: 'deep-link',\n            message: `Opened ${app.name} app`\n          };\n        }\n      }\n\n      // Method 3: Try web cart with search parameters\n      const webCartSuccess = await this.addToWebCart(app, ingredients);\n      if (webCartSuccess) {\n        return {\n          success: true,\n          method: 'web-cart',\n          message: `Added to ${app.name} web cart`\n        };\n      }\n\n      // Method 4: Fallback to search page\n      return this.fallbackToSearch(app, ingredients);\n    } catch (error) {\n      console.error(`Error adding to ${app.name} cart:`, error);\n      return this.fallbackToSearch(app, ingredients);\n    }\n  }\n\n  // Add to cart via backend API\n  async addToCartViaAPI(appKey, ingredients) {\n    try {\n      const response = await fetch('/cart/add', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          app_key: appKey,\n          ingredients: ingredients,\n          user_location: this.getUserLocation()\n        })\n      });\n      if (response.ok) {\n        const result = await response.json();\n        return result;\n      } else {\n        throw new Error(`API request failed: ${response.status}`);\n      }\n    } catch (error) {\n      console.error('Cart API error:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  }\n\n  // Get user location (mock implementation)\n  getUserLocation() {\n    return {\n      lat: 37.7749,\n      lng: -122.4194\n    };\n  }\n\n  // Check if user is on mobile device\n  isMobileDevice() {\n    return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n  }\n\n  // Try to open mobile app via deep link\n  async tryDeepLink(deepLink) {\n    return new Promise(resolve => {\n      const timeout = setTimeout(() => {\n        resolve(false);\n      }, 2000);\n      const originalHref = window.location.href;\n      window.location.href = deepLink;\n\n      // Check if app opened (user left the page)\n      setTimeout(() => {\n        if (window.location.href !== originalHref) {\n          clearTimeout(timeout);\n          resolve(true);\n        }\n      }, 1000);\n    });\n  }\n\n  // Add items to web cart using URL parameters\n  async addToWebCart(app, ingredients) {\n    try {\n      // Create cart URL with ingredients as search parameters\n      const ingredientParams = ingredients.map(ingredient => {\n        const name = typeof ingredient === 'string' ? ingredient : ingredient.ingredient || ingredient.name || '';\n        return encodeURIComponent(name);\n      }).join('&item=');\n      const cartUrl = `${app.webCartUrl}?add=${ingredientParams}`;\n\n      // Open cart page in new tab\n      window.open(cartUrl, '_blank', 'noopener,noreferrer');\n      return true;\n    } catch (error) {\n      console.error('Error adding to web cart:', error);\n      return false;\n    }\n  }\n\n  // Fallback to search page\n  fallbackToSearch(app, ingredients) {\n    const searchQuery = ingredients.map(ingredient => {\n      const name = typeof ingredient === 'string' ? ingredient : ingredient.ingredient || ingredient.name || '';\n      return name;\n    }).join(' ');\n    const searchUrl = `${app.searchUrl}${encodeURIComponent(searchQuery)}`;\n    window.open(searchUrl, '_blank', 'noopener,noreferrer');\n    return {\n      success: true,\n      method: 'search-fallback',\n      message: `Opened ${app.name} search page`\n    };\n  }\n\n  // Get cart status for an app\n  async getCartStatus(appKey) {\n    const app = this.apps[appKey];\n    if (!app) {\n      return {\n        available: false,\n        message: 'App not supported'\n      };\n    }\n    return {\n      available: true,\n      hasApp: this.isMobileDevice(),\n      hasWebCart: true,\n      message: `${app.name} cart is available`\n    };\n  }\n\n  // Get all available apps\n  getAvailableApps() {\n    return Object.keys(this.apps).map(key => ({\n      key,\n      ...this.apps[key]\n    }));\n  }\n}\nexport default new GroceryCartService();","map":{"version":3,"names":["GroceryCartService","constructor","apps","blinkit","name","webCartUrl","appDeepLink","searchUrl","hasPublicAPI","zepto","bigbasket","addToCart","appKey","ingredients","app","Error","apiResult","addToCartViaAPI","success","isMobileDevice","deepLinkSuccess","tryDeepLink","method","message","webCartSuccess","addToWebCart","fallbackToSearch","error","console","response","fetch","headers","body","JSON","stringify","app_key","user_location","getUserLocation","ok","result","json","status","lat","lng","test","navigator","userAgent","deepLink","Promise","resolve","timeout","setTimeout","originalHref","window","location","href","clearTimeout","ingredientParams","map","ingredient","encodeURIComponent","join","cartUrl","open","searchQuery","getCartStatus","available","hasApp","hasWebCart","getAvailableApps","Object","keys","key"],"sources":["/Users/roshan/Desktop/we knowsample/frontend/src/components/GroceryCartService.js"],"sourcesContent":["// Grocery Cart Service - Handles cart operations for different grocery apps\n\nclass GroceryCartService {\n  constructor() {\n    this.apps = {\n      blinkit: {\n        name: 'Blinkit',\n        webCartUrl: 'https://blinkit.com/cart',\n        appDeepLink: 'blinkit://cart',\n        searchUrl: 'https://blinkit.com/search?q=',\n        hasPublicAPI: false\n      },\n      zepto: {\n        name: 'Zepto',\n        webCartUrl: 'https://www.zepto.in/cart',\n        appDeepLink: 'zepto://cart',\n        searchUrl: 'https://www.zepto.in/search?q=',\n        hasPublicAPI: false\n      },\n      bigbasket: {\n        name: 'BigBasket',\n        webCartUrl: 'https://www.bigbasket.com/cart',\n        appDeepLink: 'bigbasket://cart',\n        searchUrl: 'https://www.bigbasket.com/ps/?q=',\n        hasPublicAPI: false\n      }\n    };\n  }\n\n  // Add ingredients to cart using the best available method\n  async addToCart(appKey, ingredients) {\n    const app = this.apps[appKey];\n    if (!app) {\n      throw new Error(`Unknown grocery app: ${appKey}`);\n    }\n\n    try {\n      // Method 1: Try backend cart API first\n      const apiResult = await this.addToCartViaAPI(appKey, ingredients);\n      if (apiResult.success) {\n        return apiResult;\n      }\n\n      // Method 2: Try mobile app deep link\n      if (this.isMobileDevice()) {\n        const deepLinkSuccess = await this.tryDeepLink(app.appDeepLink);\n        if (deepLinkSuccess) {\n          return { success: true, method: 'deep-link', message: `Opened ${app.name} app` };\n        }\n      }\n\n      // Method 3: Try web cart with search parameters\n      const webCartSuccess = await this.addToWebCart(app, ingredients);\n      if (webCartSuccess) {\n        return { success: true, method: 'web-cart', message: `Added to ${app.name} web cart` };\n      }\n\n      // Method 4: Fallback to search page\n      return this.fallbackToSearch(app, ingredients);\n\n    } catch (error) {\n      console.error(`Error adding to ${app.name} cart:`, error);\n      return this.fallbackToSearch(app, ingredients);\n    }\n  }\n\n  // Add to cart via backend API\n  async addToCartViaAPI(appKey, ingredients) {\n    try {\n      const response = await fetch('/cart/add', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          app_key: appKey,\n          ingredients: ingredients,\n          user_location: this.getUserLocation()\n        })\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        return result;\n      } else {\n        throw new Error(`API request failed: ${response.status}`);\n      }\n    } catch (error) {\n      console.error('Cart API error:', error);\n      return { success: false, error: error.message };\n    }\n  }\n\n  // Get user location (mock implementation)\n  getUserLocation() {\n    return {\n      lat: 37.7749,\n      lng: -122.4194\n    };\n  }\n\n  // Check if user is on mobile device\n  isMobileDevice() {\n    return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n  }\n\n  // Try to open mobile app via deep link\n  async tryDeepLink(deepLink) {\n    return new Promise((resolve) => {\n      const timeout = setTimeout(() => {\n        resolve(false);\n      }, 2000);\n\n      const originalHref = window.location.href;\n      \n      window.location.href = deepLink;\n      \n      // Check if app opened (user left the page)\n      setTimeout(() => {\n        if (window.location.href !== originalHref) {\n          clearTimeout(timeout);\n          resolve(true);\n        }\n      }, 1000);\n    });\n  }\n\n  // Add items to web cart using URL parameters\n  async addToWebCart(app, ingredients) {\n    try {\n      // Create cart URL with ingredients as search parameters\n      const ingredientParams = ingredients.map(ingredient => {\n        const name = typeof ingredient === 'string' \n          ? ingredient \n          : ingredient.ingredient || ingredient.name || '';\n        return encodeURIComponent(name);\n      }).join('&item=');\n\n      const cartUrl = `${app.webCartUrl}?add=${ingredientParams}`;\n      \n      // Open cart page in new tab\n      window.open(cartUrl, '_blank', 'noopener,noreferrer');\n      \n      return true;\n    } catch (error) {\n      console.error('Error adding to web cart:', error);\n      return false;\n    }\n  }\n\n  // Fallback to search page\n  fallbackToSearch(app, ingredients) {\n    const searchQuery = ingredients.map(ingredient => {\n      const name = typeof ingredient === 'string' \n        ? ingredient \n        : ingredient.ingredient || ingredient.name || '';\n      return name;\n    }).join(' ');\n\n    const searchUrl = `${app.searchUrl}${encodeURIComponent(searchQuery)}`;\n    window.open(searchUrl, '_blank', 'noopener,noreferrer');\n    \n    return { \n      success: true, \n      method: 'search-fallback', \n      message: `Opened ${app.name} search page` \n    };\n  }\n\n  // Get cart status for an app\n  async getCartStatus(appKey) {\n    const app = this.apps[appKey];\n    if (!app) {\n      return { available: false, message: 'App not supported' };\n    }\n\n    return {\n      available: true,\n      hasApp: this.isMobileDevice(),\n      hasWebCart: true,\n      message: `${app.name} cart is available`\n    };\n  }\n\n  // Get all available apps\n  getAvailableApps() {\n    return Object.keys(this.apps).map(key => ({\n      key,\n      ...this.apps[key]\n    }));\n  }\n}\n\nexport default new GroceryCartService(); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}