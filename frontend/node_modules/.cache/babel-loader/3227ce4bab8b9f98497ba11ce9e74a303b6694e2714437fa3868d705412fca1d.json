{"ast":null,"code":"var _jsxFileName = \"/Users/roshan/Desktop/we_know_sample_2/frontend/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './App.css';\nimport userDataService from './services/userDataService';\nimport { clearAllLocalStorage, logLocalStorageData } from './utils/clearLocalStorage';\n\n// Import components\nimport { LoginModal, SignupModal, LandingPage, SignupScreen } from './components';\nimport AppLayout from './components/AppLayout.jsx';\n\n// Import pages\nimport HomePage from './pages/HomePage';\nimport OrderHistory from './pages/OrderHistory';\nimport SavedAddresses from './pages/SavedAddresses';\nimport Settings from './pages/Settings';\nimport TrackOrders from './pages/TrackOrders';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [showLoginForm, setShowLoginForm] = useState(false);\n  const [showSignupScreen, setShowSignupScreen] = useState(false);\n  const [isLoadingUserData, setIsLoadingUserData] = useState(false);\n  const [dishName, setDishName] = useState('');\n  const [servings, setServings] = useState(2);\n  const [ingredients, setIngredients] = useState([]);\n  const [recipeInfo, setRecipeInfo] = useState(null);\n  const [nutritionInfo, setNutritionInfo] = useState(null);\n  const [allergyWarning, setAllergyWarning] = useState(null);\n  const [alternativeSuggestions, setAlternativeSuggestions] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const [recentSearches, setRecentSearches] = useState([]);\n  const [orders, setOrders] = useState([]);\n\n  // Debug logging for authentication state\n  console.log('App Debug - isAuthenticated:', isAuthenticated);\n  console.log('App Debug - showLoginForm:', showLoginForm);\n  console.log('App Debug - showSignupScreen:', showSignupScreen);\n\n  // Function to navigate to landing page (home)\n  const navigateToHome = () => {\n    console.log('navigateToHome called - setting isAuthenticated to false');\n    setIsAuthenticated(false);\n    setShowLoginForm(false);\n    setShowSignupScreen(false);\n    // Clear any authentication data\n    localStorage.removeItem('weKnowToken');\n    localStorage.removeItem('weKnowUser');\n    localStorage.removeItem('weKnowOrders');\n    localStorage.removeItem('weKnowRecentSearches');\n    // Scroll to top of the page\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  };\n\n  // Load recent searches from database on component mount\n  useEffect(() => {\n    const loadRecentSearches = async () => {\n      if (isAuthenticated) {\n        try {\n          const searches = await userDataService.getRecentSearches();\n          setRecentSearches(searches.map(search => search.dish_name));\n        } catch (error) {\n          console.error('Error loading recent searches:', error);\n        }\n      } else {\n        // Clear local state when not authenticated\n        setRecentSearches([]);\n      }\n    };\n    loadRecentSearches();\n  }, [isAuthenticated]);\n\n  // Load orders from database when authenticated\n  useEffect(() => {\n    const loadOrders = async () => {\n      if (isAuthenticated) {\n        try {\n          const userOrders = await userDataService.getOrders();\n          setOrders(userOrders);\n          // Save to localStorage for other components to access\n          localStorage.setItem('weKnowOrders', JSON.stringify(userOrders));\n        } catch (error) {\n          console.error('Error loading orders:', error);\n        }\n      } else {\n        // Clear local state when not authenticated\n        setOrders([]);\n        localStorage.removeItem('weKnowOrders');\n      }\n    };\n    loadOrders();\n  }, [isAuthenticated]);\n\n  // Check if user is already authenticated\n  useEffect(() => {\n    const checkAuth = async () => {\n      const token = localStorage.getItem('weKnowToken');\n      if (token) {\n        try {\n          // Verify token with backend\n          const response = await axios.get('http://localhost:8000/auth/me', {\n            headers: {\n              'Authorization': `Bearer ${token}`\n            }\n          });\n          if (response.data.success) {\n            setIsAuthenticated(true);\n            // Clear any old localStorage data that might interfere\n            localStorage.removeItem('weKnowRecentSearches');\n            localStorage.removeItem('weKnowAuthToken');\n          } else {\n            // Token is invalid, clear storage\n            userDataService.clearUserData();\n            setIsAuthenticated(false);\n          }\n        } catch (err) {\n          console.error('Auth check error:', err);\n          // Token is invalid, clear storage\n          userDataService.clearUserData();\n          setIsAuthenticated(false);\n        }\n      }\n    };\n    checkAuth();\n  }, []);\n  const handleLogout = async () => {\n    try {\n      const token = localStorage.getItem('weKnowToken');\n      if (token) {\n        // Call logout endpoint\n        await axios.post('http://localhost:8000/auth/logout', {}, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n      }\n    } catch (err) {\n      console.error('Logout error:', err);\n      // Continue with logout even if API call fails\n    } finally {\n      // Clear authentication but keep data in database\n      userDataService.clearUserData();\n      setIsAuthenticated(false);\n      setShowLoginForm(false);\n      setShowSignupScreen(false);\n      setIngredients([]);\n      setRecipeInfo(null);\n      // Recent searches and orders will be cleared by useEffect when isAuthenticated becomes false\n    }\n  };\n  const handleSubmit = async (e, overrideDishName = null) => {\n    e.preventDefault();\n    const dishToUse = overrideDishName || dishName;\n    if (!dishToUse.trim()) {\n      setError('Please enter a dish name');\n      return;\n    }\n    setLoading(true);\n    setError('');\n    setIngredients([]);\n    setRecipeInfo(null);\n    setNutritionInfo(null);\n    setAllergyWarning(null);\n    try {\n      const token = localStorage.getItem('weKnowToken');\n      const headers = {\n        'Content-Type': 'application/json'\n      };\n      if (token) {\n        headers['Authorization'] = `Bearer ${token}`;\n      }\n      const response = await axios.post('http://localhost:8000/ingredients', {\n        dish_name: dishToUse.trim(),\n        servings: servings,\n        include_nutrition: true\n      }, {\n        headers\n      });\n      console.log('Response received:', response.data);\n      if (response.data.success) {\n        console.log('Setting ingredients:', response.data.ingredients);\n        console.log('Setting recipe info:', response.data.recipe_info);\n        console.log('Setting allergy warning:', response.data.allergy_warning);\n        console.log('Setting alternative suggestions:', response.data.alternative_suggestions);\n        setIngredients(response.data.ingredients);\n        setRecipeInfo(response.data.recipe_info);\n        setNutritionInfo(response.data.nutrition || null);\n        setAllergyWarning(response.data.allergy_warning || null);\n        setAlternativeSuggestions(response.data.alternative_suggestions || null);\n\n        // Add to recent searches in database\n        if (isAuthenticated) {\n          try {\n            await userDataService.addRecentSearch(dishToUse.trim());\n            // Update local state\n            setRecentSearches(prev => {\n              const filtered = prev.filter(item => item !== dishToUse.trim());\n              return [dishToUse.trim(), ...filtered].slice(0, 4); // Keep only 4 recent searches\n            });\n          } catch (error) {\n            console.error('Error saving recent search:', error);\n          }\n        } else {\n          // For non-authenticated users, just update local state\n          setRecentSearches(prev => {\n            const filtered = prev.filter(item => item !== dishToUse.trim());\n            return [dishToUse.trim(), ...filtered].slice(0, 4);\n          });\n        }\n      } else {\n        setError(response.data.error || 'Failed to fetch ingredients');\n      }\n    } catch (err) {\n      var _err$response, _err$response$data, _err$response2;\n      console.error('Error fetching ingredients:', err);\n      if ((_err$response = err.response) !== null && _err$response !== void 0 && (_err$response$data = _err$response.data) !== null && _err$response$data !== void 0 && _err$response$data.error) {\n        setError(err.response.data.error);\n      } else if (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.status) === 404) {\n        setError(`No recipe found for \"${dishToUse}\". Try a different dish name.`);\n      } else {\n        setError('Failed to connect to the server. Please try again.');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleRecentSearchClick = async dish => {\n    setDishName(dish);\n\n    // Add to recent searches in database\n    if (isAuthenticated) {\n      try {\n        await userDataService.addRecentSearch(dish);\n        // Update local state to reflect the new search\n        setRecentSearches(prev => {\n          const filtered = prev.filter(item => item !== dish);\n          return [dish, ...filtered].slice(0, 4);\n        });\n      } catch (error) {\n        console.error('Error adding recent search:', error);\n      }\n    }\n  };\n  const addOrder = async order => {\n    const newOrder = {\n      ...order,\n      id: Date.now(),\n      timestamp: new Date().toISOString()\n    };\n    if (isAuthenticated) {\n      try {\n        // Save to database\n        const token = localStorage.getItem('weKnowToken');\n        const response = await axios.post('http://localhost:8000/user/orders', {\n          dish_name: order.dishName,\n          ingredients: order.ingredients,\n          servings: order.servings\n        }, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (response.data.success) {\n          setOrders(prevOrders => [...prevOrders, newOrder]);\n          // Save to localStorage\n          localStorage.setItem('weKnowOrders', JSON.stringify([...orders, newOrder]));\n        } else {\n          console.error('Failed to save order to database:', response.data.error);\n          // Still add to local state even if database save fails\n          setOrders(prevOrders => [...prevOrders, newOrder]);\n        }\n      } catch (error) {\n        console.error('Error saving order to database:', error);\n        // Still add to local state even if database save fails\n        setOrders(prevOrders => [...prevOrders, newOrder]);\n      }\n    } else {\n      // For non-authenticated users, just add to local state\n      setOrders(prevOrders => [...prevOrders, newOrder]);\n    }\n\n    // Show success message and refresh the search page after order is placed\n    setError(''); // Clear any existing errors\n    setTimeout(() => {\n      // Show a brief success message\n      setSuccessMessage('✅ Order placed successfully! Refreshing search page...');\n      setTimeout(() => {\n        // Clear everything and refresh the search page\n        setDishName('');\n        setIngredients([]);\n        setRecipeInfo(null);\n        setError('');\n        setSuccessMessage('');\n        setLoading(false);\n      }, 1500); // Show success message for 1.5 seconds\n    }, 500); // Small delay to show order success\n  };\n  const deleteIngredient = index => {\n    setIngredients(prevIngredients => {\n      const newIngredients = [...prevIngredients];\n      newIngredients.splice(index, 1);\n      return newIngredients;\n    });\n  };\n  const dishInputRef = useRef(null);\n  useEffect(() => {\n    if (dishInputRef.current) {\n      dishInputRef.current.focus();\n    }\n  }, [dishName]);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [isAuthenticated ? /*#__PURE__*/_jsxDEV(AppLayout, {\n        user: JSON.parse(localStorage.getItem('weKnowUser') || '{}'),\n        handleLogout: handleLogout,\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(HomePage, {\n              dish: dishName,\n              setDish: setDishName,\n              ingredients: ingredients,\n              loading: loading,\n              setLoading: setLoading,\n              error: error,\n              setError: setError,\n              successMessage: successMessage,\n              setSuccessMessage: setSuccessMessage,\n              handleSubmit: handleSubmit,\n              handleRecentSearchClick: handleRecentSearchClick,\n              recentSearches: recentSearches,\n              recipeInfo: recipeInfo,\n              nutritionInfo: nutritionInfo,\n              allergyWarning: allergyWarning,\n              servings: servings,\n              setServings: setServings,\n              orders: orders,\n              addOrder: addOrder,\n              deleteIngredient: deleteIngredient\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/order-history\",\n            element: /*#__PURE__*/_jsxDEV(OrderHistory, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/saved-addresses\",\n            element: /*#__PURE__*/_jsxDEV(SavedAddresses, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 55\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/track-orders\",\n            element: /*#__PURE__*/_jsxDEV(TrackOrders, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 52\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/settings\",\n            element: /*#__PURE__*/_jsxDEV(Settings, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 48\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"*\",\n            element: /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/\",\n              replace: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 40\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 11\n      }, this) : showSignupScreen ? /*#__PURE__*/_jsxDEV(SignupModal, {\n        isOpen: showSignupScreen,\n        onClose: () => setShowSignupScreen(false),\n        onSignup: userData => {\n          setIsAuthenticated(true);\n          setShowSignupScreen(false);\n          // Data will be loaded from database via useEffect\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(LandingPage, {\n        onLoginClick: () => setShowLoginForm(true),\n        onSignupClick: () => setShowSignupScreen(true),\n        navigateToHome: navigateToHome\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 11\n      }, this), showLoginForm && /*#__PURE__*/_jsxDEV(LoginModal, {\n        isOpen: showLoginForm,\n        onClose: () => setShowLoginForm(false),\n        onLogin: () => {\n          console.log('onLogin callback called - setting isAuthenticated to true');\n          setIsAuthenticated(true);\n          setShowLoginForm(false); // Close the login modal\n          // Data will be loaded from database via useEffect\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 338,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"iesG1/HVNPriMeJgKkBYPW88Hl4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","BrowserRouter","Router","Routes","Route","Navigate","axios","userDataService","clearAllLocalStorage","logLocalStorageData","LoginModal","SignupModal","LandingPage","SignupScreen","AppLayout","HomePage","OrderHistory","SavedAddresses","Settings","TrackOrders","jsxDEV","_jsxDEV","App","_s","isAuthenticated","setIsAuthenticated","showLoginForm","setShowLoginForm","showSignupScreen","setShowSignupScreen","isLoadingUserData","setIsLoadingUserData","dishName","setDishName","servings","setServings","ingredients","setIngredients","recipeInfo","setRecipeInfo","nutritionInfo","setNutritionInfo","allergyWarning","setAllergyWarning","alternativeSuggestions","setAlternativeSuggestions","loading","setLoading","error","setError","successMessage","setSuccessMessage","recentSearches","setRecentSearches","orders","setOrders","console","log","navigateToHome","localStorage","removeItem","window","scrollTo","top","behavior","loadRecentSearches","searches","getRecentSearches","map","search","dish_name","loadOrders","userOrders","getOrders","setItem","JSON","stringify","checkAuth","token","getItem","response","get","headers","data","success","clearUserData","err","handleLogout","post","handleSubmit","e","overrideDishName","preventDefault","dishToUse","trim","include_nutrition","recipe_info","allergy_warning","alternative_suggestions","nutrition","addRecentSearch","prev","filtered","filter","item","slice","_err$response","_err$response$data","_err$response2","status","handleRecentSearchClick","dish","addOrder","order","newOrder","id","Date","now","timestamp","toISOString","prevOrders","setTimeout","deleteIngredient","index","prevIngredients","newIngredients","splice","dishInputRef","current","focus","children","className","user","parse","path","element","setDish","fileName","_jsxFileName","lineNumber","columnNumber","to","replace","isOpen","onClose","onSignup","userData","onLoginClick","onSignupClick","onLogin","_c","$RefreshReg$"],"sources":["/Users/roshan/Desktop/we_know_sample_2/frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './App.css';\nimport userDataService from './services/userDataService';\nimport { clearAllLocalStorage, logLocalStorageData } from './utils/clearLocalStorage';\n\n// Import components\nimport { LoginModal, SignupModal, LandingPage, SignupScreen } from './components';\nimport AppLayout from './components/AppLayout.jsx';\n\n// Import pages\nimport HomePage from './pages/HomePage';\nimport OrderHistory from './pages/OrderHistory';\nimport SavedAddresses from './pages/SavedAddresses';\nimport Settings from './pages/Settings';\nimport TrackOrders from './pages/TrackOrders';\n\nfunction App() {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [showLoginForm, setShowLoginForm] = useState(false);\n  const [showSignupScreen, setShowSignupScreen] = useState(false);\n  const [isLoadingUserData, setIsLoadingUserData] = useState(false);\n  const [dishName, setDishName] = useState('');\n  const [servings, setServings] = useState(2);\n  const [ingredients, setIngredients] = useState([]);\n  const [recipeInfo, setRecipeInfo] = useState(null);\n  const [nutritionInfo, setNutritionInfo] = useState(null);\n  const [allergyWarning, setAllergyWarning] = useState(null);\n  const [alternativeSuggestions, setAlternativeSuggestions] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n\n  const [recentSearches, setRecentSearches] = useState([]);\n  const [orders, setOrders] = useState([]);\n\n  // Debug logging for authentication state\n  console.log('App Debug - isAuthenticated:', isAuthenticated);\n  console.log('App Debug - showLoginForm:', showLoginForm);\n  console.log('App Debug - showSignupScreen:', showSignupScreen);\n\n  // Function to navigate to landing page (home)\n  const navigateToHome = () => {\n    console.log('navigateToHome called - setting isAuthenticated to false');\n    setIsAuthenticated(false);\n    setShowLoginForm(false);\n    setShowSignupScreen(false);\n    // Clear any authentication data\n    localStorage.removeItem('weKnowToken');\n    localStorage.removeItem('weKnowUser');\n    localStorage.removeItem('weKnowOrders');\n    localStorage.removeItem('weKnowRecentSearches');\n    // Scroll to top of the page\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n  \n  // Load recent searches from database on component mount\n  useEffect(() => {\n    const loadRecentSearches = async () => {\n      if (isAuthenticated) {\n        try {\n          const searches = await userDataService.getRecentSearches();\n          setRecentSearches(searches.map(search => search.dish_name));\n        } catch (error) {\n          console.error('Error loading recent searches:', error);\n        }\n      } else {\n        // Clear local state when not authenticated\n        setRecentSearches([]);\n      }\n    };\n    \n    loadRecentSearches();\n  }, [isAuthenticated]);\n\n  // Load orders from database when authenticated\n  useEffect(() => {\n    const loadOrders = async () => {\n      if (isAuthenticated) {\n        try {\n          const userOrders = await userDataService.getOrders();\n          setOrders(userOrders);\n          // Save to localStorage for other components to access\n          localStorage.setItem('weKnowOrders', JSON.stringify(userOrders));\n        } catch (error) {\n          console.error('Error loading orders:', error);\n        }\n      } else {\n        // Clear local state when not authenticated\n        setOrders([]);\n        localStorage.removeItem('weKnowOrders');\n      }\n    };\n    \n    loadOrders();\n  }, [isAuthenticated]);\n\n  // Check if user is already authenticated\n  useEffect(() => {\n    const checkAuth = async () => {\n      const token = localStorage.getItem('weKnowToken');\n      if (token) {\n        try {\n          // Verify token with backend\n          const response = await axios.get('http://localhost:8000/auth/me', {\n            headers: {\n              'Authorization': `Bearer ${token}`\n            }\n          });\n          \n          if (response.data.success) {\n            setIsAuthenticated(true);\n            // Clear any old localStorage data that might interfere\n            localStorage.removeItem('weKnowRecentSearches');\n            localStorage.removeItem('weKnowAuthToken');\n          } else {\n            // Token is invalid, clear storage\n            userDataService.clearUserData();\n            setIsAuthenticated(false);\n          }\n        } catch (err) {\n          console.error('Auth check error:', err);\n          // Token is invalid, clear storage\n          userDataService.clearUserData();\n          setIsAuthenticated(false);\n        }\n      }\n    };\n    \n    checkAuth();\n  }, []);\n\n  const handleLogout = async () => {\n    try {\n      const token = localStorage.getItem('weKnowToken');\n      if (token) {\n        // Call logout endpoint\n        await axios.post('http://localhost:8000/auth/logout', {}, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n      }\n    } catch (err) {\n      console.error('Logout error:', err);\n      // Continue with logout even if API call fails\n    } finally {\n      // Clear authentication but keep data in database\n      userDataService.clearUserData();\n      setIsAuthenticated(false);\n      setShowLoginForm(false);\n      setShowSignupScreen(false);\n      setIngredients([]);\n      setRecipeInfo(null);\n      // Recent searches and orders will be cleared by useEffect when isAuthenticated becomes false\n    }\n  };\n\n  const handleSubmit = async (e, overrideDishName = null) => {\n    e.preventDefault();\n    \n    const dishToUse = overrideDishName || dishName;\n    \n    if (!dishToUse.trim()) {\n      setError('Please enter a dish name');\n      return;\n    }\n\n    setLoading(true);\n    setError('');\n    setIngredients([]);\n    setRecipeInfo(null);\n    setNutritionInfo(null);\n    setAllergyWarning(null);\n\n    try {\n      const token = localStorage.getItem('weKnowToken');\n      const headers = {\n        'Content-Type': 'application/json'\n      };\n      \n      if (token) {\n        headers['Authorization'] = `Bearer ${token}`;\n      }\n\n      const response = await axios.post('http://localhost:8000/ingredients', {\n        dish_name: dishToUse.trim(),\n        servings: servings,\n        include_nutrition: true\n      }, { headers });\n\n      console.log('Response received:', response.data);\n\n      if (response.data.success) {\n        console.log('Setting ingredients:', response.data.ingredients);\n        console.log('Setting recipe info:', response.data.recipe_info);\n        console.log('Setting allergy warning:', response.data.allergy_warning);\n        console.log('Setting alternative suggestions:', response.data.alternative_suggestions);\n        setIngredients(response.data.ingredients);\n        setRecipeInfo(response.data.recipe_info);\n        setNutritionInfo(response.data.nutrition || null);\n        setAllergyWarning(response.data.allergy_warning || null);\n        setAlternativeSuggestions(response.data.alternative_suggestions || null);\n        \n        // Add to recent searches in database\n        if (isAuthenticated) {\n          try {\n            await userDataService.addRecentSearch(dishToUse.trim());\n            // Update local state\n            setRecentSearches(prev => {\n              const filtered = prev.filter(item => item !== dishToUse.trim());\n              return [dishToUse.trim(), ...filtered].slice(0, 4); // Keep only 4 recent searches\n            });\n          } catch (error) {\n            console.error('Error saving recent search:', error);\n          }\n        } else {\n          // For non-authenticated users, just update local state\n          setRecentSearches(prev => {\n            const filtered = prev.filter(item => item !== dishToUse.trim());\n            return [dishToUse.trim(), ...filtered].slice(0, 4);\n          });\n        }\n      } else {\n        setError(response.data.error || 'Failed to fetch ingredients');\n      }\n    } catch (err) {\n      console.error('Error fetching ingredients:', err);\n      if (err.response?.data?.error) {\n        setError(err.response.data.error);\n      } else if (err.response?.status === 404) {\n        setError(`No recipe found for \"${dishToUse}\". Try a different dish name.`);\n      } else {\n        setError('Failed to connect to the server. Please try again.');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n\n\n  const handleRecentSearchClick = async (dish) => {\n    setDishName(dish);\n    \n    // Add to recent searches in database\n    if (isAuthenticated) {\n      try {\n        await userDataService.addRecentSearch(dish);\n        // Update local state to reflect the new search\n        setRecentSearches(prev => {\n          const filtered = prev.filter(item => item !== dish);\n          return [dish, ...filtered].slice(0, 4);\n        });\n      } catch (error) {\n        console.error('Error adding recent search:', error);\n      }\n    }\n  };\n\n  const addOrder = async (order) => {\n    const newOrder = {\n      ...order,\n      id: Date.now(),\n      timestamp: new Date().toISOString()\n    };\n\n    if (isAuthenticated) {\n      try {\n        // Save to database\n        const token = localStorage.getItem('weKnowToken');\n        const response = await axios.post('http://localhost:8000/user/orders', {\n          dish_name: order.dishName,\n          ingredients: order.ingredients,\n          servings: order.servings\n        }, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n\n        if (response.data.success) {\n          setOrders(prevOrders => [...prevOrders, newOrder]);\n          // Save to localStorage\n          localStorage.setItem('weKnowOrders', JSON.stringify([...orders, newOrder]));\n        } else {\n          console.error('Failed to save order to database:', response.data.error);\n          // Still add to local state even if database save fails\n          setOrders(prevOrders => [...prevOrders, newOrder]);\n        }\n      } catch (error) {\n        console.error('Error saving order to database:', error);\n        // Still add to local state even if database save fails\n        setOrders(prevOrders => [...prevOrders, newOrder]);\n      }\n    } else {\n      // For non-authenticated users, just add to local state\n      setOrders(prevOrders => [...prevOrders, newOrder]);\n    }\n\n    // Show success message and refresh the search page after order is placed\n    setError(''); // Clear any existing errors\n    setTimeout(() => {\n      // Show a brief success message\n      setSuccessMessage('✅ Order placed successfully! Refreshing search page...');\n      \n      setTimeout(() => {\n        // Clear everything and refresh the search page\n        setDishName('');\n        setIngredients([]);\n        setRecipeInfo(null);\n        setError('');\n        setSuccessMessage('');\n        setLoading(false);\n      }, 1500); // Show success message for 1.5 seconds\n    }, 500); // Small delay to show order success\n  };\n\n  const deleteIngredient = (index) => {\n    setIngredients(prevIngredients => {\n      const newIngredients = [...prevIngredients];\n      newIngredients.splice(index, 1);\n      return newIngredients;\n    });\n  };\n\n\n  const dishInputRef = useRef(null);\n\n  useEffect(() => {\n    if (dishInputRef.current) {\n      dishInputRef.current.focus();\n    }\n  }, [dishName]);\n\n  return (\n    <Router>\n      <div className=\"App\">\n\n        {isAuthenticated ? (\n          <AppLayout \n            user={JSON.parse(localStorage.getItem('weKnowUser') || '{}')}\n            handleLogout={handleLogout}\n          >\n            <Routes>\n              <Route path=\"/\" element={\n                <HomePage \n                  dish={dishName}\n                  setDish={setDishName}\n                  ingredients={ingredients}\n                  loading={loading}\n                  setLoading={setLoading}\n                  error={error}\n                  setError={setError}\n                  successMessage={successMessage}\n                  setSuccessMessage={setSuccessMessage}\n                  handleSubmit={handleSubmit}\n\n                  handleRecentSearchClick={handleRecentSearchClick}\n                  recentSearches={recentSearches}\n                  recipeInfo={recipeInfo}\n                  nutritionInfo={nutritionInfo}\n                  allergyWarning={allergyWarning}\n                  servings={servings}\n                  setServings={setServings}\n                  orders={orders}\n                  addOrder={addOrder}\n                  deleteIngredient={deleteIngredient}\n                />\n              } />\n              <Route path=\"/order-history\" element={<OrderHistory />} />\n              <Route path=\"/saved-addresses\" element={<SavedAddresses />} />\n              <Route path=\"/track-orders\" element={<TrackOrders />} />\n              <Route path=\"/settings\" element={<Settings />} />\n              <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\n            </Routes>\n          </AppLayout>\n        ) : showSignupScreen ? (\n          <SignupModal\n            isOpen={showSignupScreen}\n            onClose={() => setShowSignupScreen(false)}\n            onSignup={(userData) => {\n              setIsAuthenticated(true);\n              setShowSignupScreen(false);\n              // Data will be loaded from database via useEffect\n            }}\n          />\n        ) : (\n          <LandingPage \n            onLoginClick={() => setShowLoginForm(true)}\n            onSignupClick={() => setShowSignupScreen(true)}\n            navigateToHome={navigateToHome}\n          />\n        )}\n\n        {/* Login Form Modal */}\n        {showLoginForm && (\n          <LoginModal\n            isOpen={showLoginForm}\n            onClose={() => setShowLoginForm(false)}\n            onLogin={() => {\n              console.log('onLogin callback called - setting isAuthenticated to true');\n              setIsAuthenticated(true);\n              setShowLoginForm(false); // Close the login modal\n              // Data will be loaded from database via useEffect\n            }}\n          />\n        )}\n\n\n      </div>\n    </Router>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}