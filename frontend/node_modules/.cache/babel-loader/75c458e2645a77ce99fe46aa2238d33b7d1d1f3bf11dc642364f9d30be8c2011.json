{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import'./AllergyManagementModal.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AllergyManagementModal=_ref=>{let{isOpen,onClose,user}=_ref;const[allergies,setAllergies]=useState([]);const[commonAllergens,setCommonAllergens]=useState([]);const[loading,setLoading]=useState(false);const[newAllergy,setNewAllergy]=useState('');const[customAllergy,setCustomAllergy]=useState('');const[error,setError]=useState('');const[success,setSuccess]=useState('');// Common allergens with emojis\nconst allergenEmojis={'peanuts':'🥜','tree nuts':'🌰','shellfish':'🦐','fish':'🐟','dairy':'🥛','eggs':'🥚','soy':'🫘','wheat':'🌾','gluten':'🌾','sesame':'⚪','sulfites':'🍷','mustard':'🌶️','celery':'🥬','lupin':'🌱','molluscs':'🐚'};useEffect(()=>{if(isOpen){fetchUserAllergies();fetchCommonAllergens();}},[isOpen]);const fetchUserAllergies=async()=>{try{setLoading(true);const token=localStorage.getItem('token');const response=await axios.get('http://localhost:8000/user/allergies',{headers:{Authorization:`Bearer ${token}`}});if(response.data.success){setAllergies(response.data.allergies);}}catch(error){console.error('Error fetching allergies:',error);setError('Failed to load allergies');}finally{setLoading(false);}};const fetchCommonAllergens=async()=>{try{const response=await axios.get('http://localhost:8000/allergies/common');if(response.data.success){setCommonAllergens(response.data.allergens);}}catch(error){console.error('Error fetching common allergens:',error);}};const addAllergy=async function(allergyName){let allergyType=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'common';try{setLoading(true);setError('');setSuccess('');const token=localStorage.getItem('token');const response=await axios.post('http://localhost:8000/user/allergies',{allergy_name:allergyName,allergy_type:allergyType},{headers:{Authorization:`Bearer ${token}`}});if(response.data.success){setSuccess(`Added ${allergyName} to your allergies`);setNewAllergy('');setCustomAllergy('');fetchUserAllergies();// Refresh the list\n}else{setError(response.data.error||'Failed to add allergy');}}catch(error){var _error$response,_error$response$data;console.error('Error adding allergy:',error);setError(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.error)||'Failed to add allergy');}finally{setLoading(false);}};const removeAllergy=async(allergyId,allergyName)=>{if(!window.confirm(`Are you sure you want to remove ${allergyName} from your allergies?`)){return;}try{setLoading(true);setError('');setSuccess('');const token=localStorage.getItem('token');const response=await axios.delete(`http://localhost:8000/user/allergies/${allergyId}`,{headers:{Authorization:`Bearer ${token}`}});if(response.data.success){setSuccess(`Removed ${allergyName} from your allergies`);fetchUserAllergies();// Refresh the list\n}else{setError(response.data.error||'Failed to remove allergy');}}catch(error){var _error$response2,_error$response2$data;console.error('Error removing allergy:',error);setError(((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.error)||'Failed to remove allergy');}finally{setLoading(false);}};const handleCommonAllergyClick=allergen=>{const isAlreadyAdded=allergies.some(allergy=>allergy.allergy_name.toLowerCase()===allergen.toLowerCase());if(isAlreadyAdded){setError(`${allergen} is already in your allergies`);return;}addAllergy(allergen,'common');};const handleCustomAllergySubmit=e=>{e.preventDefault();if(!customAllergy.trim()){setError('Please enter an allergy name');return;}const isAlreadyAdded=allergies.some(allergy=>allergy.allergy_name.toLowerCase()===customAllergy.toLowerCase());if(isAlreadyAdded){setError(`${customAllergy} is already in your allergies`);return;}addAllergy(customAllergy.trim(),'custom');};const getEmoji=allergyName=>{const lowerName=allergyName.toLowerCase();return allergenEmojis[lowerName]||'⚠️';};if(!isOpen)return null;return/*#__PURE__*/_jsx(\"div\",{className:\"allergy-modal-overlay\",onClick:onClose,children:/*#__PURE__*/_jsxs(\"div\",{className:\"allergy-modal\",onClick:e=>e.stopPropagation(),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"allergy-modal-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"allergy-modal-title\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"allergy-icon\",children:\"\\u26A0\\uFE0F\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Manage Allergies\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Keep your allergy profile updated for safer food recommendations\"})]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"close-button\",onClick:onClose,children:\"\\u2715\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"allergy-modal-content\",children:[error&&/*#__PURE__*/_jsxs(\"div\",{className:\"message error\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"\\u274C\"}),\" \",error]}),success&&/*#__PURE__*/_jsxs(\"div\",{className:\"message success\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"\\u2705\"}),\" \",success]}),/*#__PURE__*/_jsxs(\"div\",{className:\"section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Your Current Allergies\"}),loading?/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Loading...\"}):allergies.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"empty-state\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"empty-icon\",children:\"\\uD83D\\uDCDD\"}),/*#__PURE__*/_jsx(\"p\",{children:\"No allergies added yet\"}),/*#__PURE__*/_jsx(\"p\",{className:\"empty-subtitle\",children:\"Add your allergies below to get personalized recommendations\"})]}):/*#__PURE__*/_jsx(\"div\",{className:\"allergies-list\",children:allergies.map(allergy=>/*#__PURE__*/_jsxs(\"div\",{className:\"allergy-item\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"allergy-info\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"allergy-emoji\",children:getEmoji(allergy.allergy_name)}),/*#__PURE__*/_jsx(\"span\",{className:\"allergy-name\",children:allergy.allergy_name}),/*#__PURE__*/_jsx(\"span\",{className:\"allergy-type\",children:allergy.allergy_type})]}),/*#__PURE__*/_jsx(\"button\",{className:\"remove-button\",onClick:()=>removeAllergy(allergy.id,allergy.allergy_name),disabled:loading,children:\"\\u2715\"})]},allergy.id))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Add Common Allergies\"}),/*#__PURE__*/_jsx(\"p\",{className:\"section-subtitle\",children:\"Click on any allergy to add it to your profile\"}),/*#__PURE__*/_jsx(\"div\",{className:\"common-allergens-grid\",children:commonAllergens.map(allergen=>{const isAdded=allergies.some(allergy=>allergy.allergy_name.toLowerCase()===allergen.toLowerCase());return/*#__PURE__*/_jsxs(\"button\",{className:`allergen-chip ${isAdded?'added':''}`,onClick:()=>handleCommonAllergyClick(allergen),disabled:isAdded||loading,children:[/*#__PURE__*/_jsx(\"span\",{className:\"allergen-emoji\",children:getEmoji(allergen)}),/*#__PURE__*/_jsx(\"span\",{className:\"allergen-text\",children:allergen}),isAdded&&/*#__PURE__*/_jsx(\"span\",{className:\"added-check\",children:\"\\u2713\"})]},allergen);})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Add Custom Allergy\"}),/*#__PURE__*/_jsx(\"p\",{className:\"section-subtitle\",children:\"Add any allergy not listed above\"}),/*#__PURE__*/_jsx(\"form\",{onSubmit:handleCustomAllergySubmit,className:\"custom-allergy-form\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:customAllergy,onChange:e=>setCustomAllergy(e.target.value),placeholder:\"Enter allergy name (e.g., kiwi, mango)\",className:\"custom-allergy-input\",disabled:loading}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"add-button\",disabled:!customAllergy.trim()||loading,children:\"Add\"})]})})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"allergy-modal-footer\",children:/*#__PURE__*/_jsx(\"button\",{className:\"done-button\",onClick:onClose,children:\"Done\"})})]})});};export default AllergyManagementModal;","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","AllergyManagementModal","_ref","isOpen","onClose","user","allergies","setAllergies","commonAllergens","setCommonAllergens","loading","setLoading","newAllergy","setNewAllergy","customAllergy","setCustomAllergy","error","setError","success","setSuccess","allergenEmojis","fetchUserAllergies","fetchCommonAllergens","token","localStorage","getItem","response","get","headers","Authorization","data","console","allergens","addAllergy","allergyName","allergyType","arguments","length","undefined","post","allergy_name","allergy_type","_error$response","_error$response$data","removeAllergy","allergyId","window","confirm","delete","_error$response2","_error$response2$data","handleCommonAllergyClick","allergen","isAlreadyAdded","some","allergy","toLowerCase","handleCustomAllergySubmit","e","preventDefault","trim","getEmoji","lowerName","className","onClick","children","stopPropagation","map","id","disabled","isAdded","onSubmit","type","value","onChange","target","placeholder"],"sources":["/Users/roshan/Desktop/we_know_sample_2/frontend/src/components/AllergyManagementModal.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './AllergyManagementModal.css';\n\nconst AllergyManagementModal = ({ isOpen, onClose, user }) => {\n  const [allergies, setAllergies] = useState([]);\n  const [commonAllergens, setCommonAllergens] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [newAllergy, setNewAllergy] = useState('');\n  const [customAllergy, setCustomAllergy] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  // Common allergens with emojis\n  const allergenEmojis = {\n    'peanuts': '🥜',\n    'tree nuts': '🌰',\n    'shellfish': '🦐',\n    'fish': '🐟',\n    'dairy': '🥛',\n    'eggs': '🥚',\n    'soy': '🫘',\n    'wheat': '🌾',\n    'gluten': '🌾',\n    'sesame': '⚪',\n    'sulfites': '🍷',\n    'mustard': '🌶️',\n    'celery': '🥬',\n    'lupin': '🌱',\n    'molluscs': '🐚'\n  };\n\n  useEffect(() => {\n    if (isOpen) {\n      fetchUserAllergies();\n      fetchCommonAllergens();\n    }\n  }, [isOpen]);\n\n  const fetchUserAllergies = async () => {\n    try {\n      setLoading(true);\n      const token = localStorage.getItem('token');\n      const response = await axios.get('http://localhost:8000/user/allergies', {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n      \n      if (response.data.success) {\n        setAllergies(response.data.allergies);\n      }\n    } catch (error) {\n      console.error('Error fetching allergies:', error);\n      setError('Failed to load allergies');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchCommonAllergens = async () => {\n    try {\n      const response = await axios.get('http://localhost:8000/allergies/common');\n      if (response.data.success) {\n        setCommonAllergens(response.data.allergens);\n      }\n    } catch (error) {\n      console.error('Error fetching common allergens:', error);\n    }\n  };\n\n  const addAllergy = async (allergyName, allergyType = 'common') => {\n    try {\n      setLoading(true);\n      setError('');\n      setSuccess('');\n      \n      const token = localStorage.getItem('token');\n      const response = await axios.post('http://localhost:8000/user/allergies', {\n        allergy_name: allergyName,\n        allergy_type: allergyType\n      }, {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n      \n      if (response.data.success) {\n        setSuccess(`Added ${allergyName} to your allergies`);\n        setNewAllergy('');\n        setCustomAllergy('');\n        fetchUserAllergies(); // Refresh the list\n      } else {\n        setError(response.data.error || 'Failed to add allergy');\n      }\n    } catch (error) {\n      console.error('Error adding allergy:', error);\n      setError(error.response?.data?.error || 'Failed to add allergy');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const removeAllergy = async (allergyId, allergyName) => {\n    if (!window.confirm(`Are you sure you want to remove ${allergyName} from your allergies?`)) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setError('');\n      setSuccess('');\n      \n      const token = localStorage.getItem('token');\n      const response = await axios.delete(`http://localhost:8000/user/allergies/${allergyId}`, {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n      \n      if (response.data.success) {\n        setSuccess(`Removed ${allergyName} from your allergies`);\n        fetchUserAllergies(); // Refresh the list\n      } else {\n        setError(response.data.error || 'Failed to remove allergy');\n      }\n    } catch (error) {\n      console.error('Error removing allergy:', error);\n      setError(error.response?.data?.error || 'Failed to remove allergy');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCommonAllergyClick = (allergen) => {\n    const isAlreadyAdded = allergies.some(allergy => \n      allergy.allergy_name.toLowerCase() === allergen.toLowerCase()\n    );\n    \n    if (isAlreadyAdded) {\n      setError(`${allergen} is already in your allergies`);\n      return;\n    }\n    \n    addAllergy(allergen, 'common');\n  };\n\n  const handleCustomAllergySubmit = (e) => {\n    e.preventDefault();\n    if (!customAllergy.trim()) {\n      setError('Please enter an allergy name');\n      return;\n    }\n    \n    const isAlreadyAdded = allergies.some(allergy => \n      allergy.allergy_name.toLowerCase() === customAllergy.toLowerCase()\n    );\n    \n    if (isAlreadyAdded) {\n      setError(`${customAllergy} is already in your allergies`);\n      return;\n    }\n    \n    addAllergy(customAllergy.trim(), 'custom');\n  };\n\n  const getEmoji = (allergyName) => {\n    const lowerName = allergyName.toLowerCase();\n    return allergenEmojis[lowerName] || '⚠️';\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"allergy-modal-overlay\" onClick={onClose}>\n      <div className=\"allergy-modal\" onClick={(e) => e.stopPropagation()}>\n        {/* Header */}\n        <div className=\"allergy-modal-header\">\n          <div className=\"allergy-modal-title\">\n            <span className=\"allergy-icon\">⚠️</span>\n            <div>\n              <h2>Manage Allergies</h2>\n              <p>Keep your allergy profile updated for safer food recommendations</p>\n            </div>\n          </div>\n          <button className=\"close-button\" onClick={onClose}>✕</button>\n        </div>\n\n        {/* Content */}\n        <div className=\"allergy-modal-content\">\n          {/* Error/Success Messages */}\n          {error && (\n            <div className=\"message error\">\n              <span>❌</span> {error}\n            </div>\n          )}\n          {success && (\n            <div className=\"message success\">\n              <span>✅</span> {success}\n            </div>\n          )}\n\n          {/* Current Allergies */}\n          <div className=\"section\">\n            <h3>Your Current Allergies</h3>\n            {loading ? (\n              <div className=\"loading\">Loading...</div>\n            ) : allergies.length === 0 ? (\n              <div className=\"empty-state\">\n                <span className=\"empty-icon\">📝</span>\n                <p>No allergies added yet</p>\n                <p className=\"empty-subtitle\">Add your allergies below to get personalized recommendations</p>\n              </div>\n            ) : (\n              <div className=\"allergies-list\">\n                {allergies.map((allergy) => (\n                  <div key={allergy.id} className=\"allergy-item\">\n                    <div className=\"allergy-info\">\n                      <span className=\"allergy-emoji\">{getEmoji(allergy.allergy_name)}</span>\n                      <span className=\"allergy-name\">{allergy.allergy_name}</span>\n                      <span className=\"allergy-type\">{allergy.allergy_type}</span>\n                    </div>\n                    <button \n                      className=\"remove-button\"\n                      onClick={() => removeAllergy(allergy.id, allergy.allergy_name)}\n                      disabled={loading}\n                    >\n                      ✕\n                    </button>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n\n          {/* Add Common Allergies */}\n          <div className=\"section\">\n            <h3>Add Common Allergies</h3>\n            <p className=\"section-subtitle\">Click on any allergy to add it to your profile</p>\n            <div className=\"common-allergens-grid\">\n              {commonAllergens.map((allergen) => {\n                const isAdded = allergies.some(allergy => \n                  allergy.allergy_name.toLowerCase() === allergen.toLowerCase()\n                );\n                return (\n                  <button\n                    key={allergen}\n                    className={`allergen-chip ${isAdded ? 'added' : ''}`}\n                    onClick={() => handleCommonAllergyClick(allergen)}\n                    disabled={isAdded || loading}\n                  >\n                    <span className=\"allergen-emoji\">{getEmoji(allergen)}</span>\n                    <span className=\"allergen-text\">{allergen}</span>\n                    {isAdded && <span className=\"added-check\">✓</span>}\n                  </button>\n                );\n              })}\n            </div>\n          </div>\n\n          {/* Add Custom Allergy */}\n          <div className=\"section\">\n            <h3>Add Custom Allergy</h3>\n            <p className=\"section-subtitle\">Add any allergy not listed above</p>\n            <form onSubmit={handleCustomAllergySubmit} className=\"custom-allergy-form\">\n              <div className=\"input-group\">\n                <input\n                  type=\"text\"\n                  value={customAllergy}\n                  onChange={(e) => setCustomAllergy(e.target.value)}\n                  placeholder=\"Enter allergy name (e.g., kiwi, mango)\"\n                  className=\"custom-allergy-input\"\n                  disabled={loading}\n                />\n                <button \n                  type=\"submit\" \n                  className=\"add-button\"\n                  disabled={!customAllergy.trim() || loading}\n                >\n                  Add\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n\n        {/* Footer */}\n        <div className=\"allergy-modal-footer\">\n          <button className=\"done-button\" onClick={onClose}>\n            Done\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AllergyManagementModal; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}