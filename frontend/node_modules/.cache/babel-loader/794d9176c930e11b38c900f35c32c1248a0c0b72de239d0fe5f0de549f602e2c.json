{"ast":null,"code":"var _jsxFileName = \"/Users/roshan/Desktop/we knowsample/frontend/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './App.css';\nimport userDataService from './services/userDataService';\nimport { clearAllLocalStorage, logLocalStorageData } from './utils/clearLocalStorage';\n\n// Import components\nimport { LoginModal, SignupModal, LandingPage, SignupScreen } from './components';\nimport AppLayout from './components/AppLayout.jsx';\n\n// Import pages\nimport HomePage from './pages/HomePage';\nimport OrderHistory from './pages/OrderHistory';\nimport SavedAddresses from './pages/SavedAddresses';\nimport Settings from './pages/Settings';\nimport TrackOrders from './pages/TrackOrders';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [showLoginForm, setShowLoginForm] = useState(false);\n  const [showSignupScreen, setShowSignupScreen] = useState(false);\n  const [dishName, setDishName] = useState('');\n  const [servings, setServings] = useState(2);\n  const [ingredients, setIngredients] = useState([]);\n  const [recipeInfo, setRecipeInfo] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [recentSearches, setRecentSearches] = useState([]);\n  const [orders, setOrders] = useState([]);\n\n  // Load recent searches from database on component mount\n  useEffect(() => {\n    const loadRecentSearches = async () => {\n      if (isAuthenticated) {\n        try {\n          const searches = await userDataService.getRecentSearches();\n          setRecentSearches(searches.map(search => search.dish_name));\n        } catch (error) {\n          console.error('Error loading recent searches:', error);\n        }\n      } else {\n        // Clear local state when not authenticated\n        setRecentSearches([]);\n      }\n    };\n    loadRecentSearches();\n  }, [isAuthenticated]);\n\n  // Load orders from database when authenticated\n  useEffect(() => {\n    const loadOrders = async () => {\n      if (isAuthenticated) {\n        try {\n          const userOrders = await userDataService.getOrders();\n          setOrders(userOrders);\n        } catch (error) {\n          console.error('Error loading orders:', error);\n        }\n      } else {\n        // Clear local state when not authenticated\n        setOrders([]);\n      }\n    };\n    loadOrders();\n  }, [isAuthenticated]);\n\n  // Check if user is already authenticated\n  useEffect(() => {\n    const checkAuth = async () => {\n      const token = localStorage.getItem('weKnowToken');\n      if (token) {\n        try {\n          // Verify token with backend\n          const response = await axios.get('http://localhost:5001/auth/me', {\n            headers: {\n              'Authorization': `Bearer ${token}`\n            }\n          });\n          if (response.data.success) {\n            setIsAuthenticated(true);\n            // Clear any old localStorage data that might interfere\n            localStorage.removeItem('weKnowRecentSearches');\n            localStorage.removeItem('weKnowAuthToken');\n          } else {\n            // Token is invalid, clear storage\n            userDataService.clearUserData();\n            setIsAuthenticated(false);\n          }\n        } catch (err) {\n          console.error('Auth check error:', err);\n          // Token is invalid, clear storage\n          userDataService.clearUserData();\n          setIsAuthenticated(false);\n        }\n      }\n    };\n    checkAuth();\n  }, []);\n  const handleLogout = async () => {\n    try {\n      const token = localStorage.getItem('weKnowToken');\n      if (token) {\n        // Call logout endpoint\n        await axios.post('http://localhost:5001/auth/logout', {}, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n      }\n    } catch (err) {\n      console.error('Logout error:', err);\n      // Continue with logout even if API call fails\n    } finally {\n      // Clear authentication but keep data in database\n      userDataService.clearUserData();\n      setIsAuthenticated(false);\n      setShowLoginForm(false);\n      setShowSignupScreen(false);\n      setIngredients([]);\n      setRecipeInfo(null);\n      // Recent searches and orders will be cleared by useEffect when isAuthenticated becomes false\n    }\n  };\n  const handleSubmit = async (e, overrideDishName = null) => {\n    e.preventDefault();\n    const dishToUse = overrideDishName || dishName;\n    if (!dishToUse.trim()) {\n      setError('Please enter a dish name');\n      return;\n    }\n    setLoading(true);\n    setError('');\n    setIngredients([]);\n    setRecipeInfo(null);\n    try {\n      const response = await axios.post('http://localhost:5001/ingredients', {\n        dish_name: dishToUse.trim(),\n        servings: servings\n      });\n      console.log('Response received:', response.data);\n      if (response.data.success) {\n        console.log('Setting ingredients:', response.data.ingredients);\n        console.log('Setting recipe info:', response.data.recipe_info);\n        setIngredients(response.data.ingredients);\n        setRecipeInfo(response.data.recipe_info);\n\n        // Add to recent searches in database\n        if (isAuthenticated) {\n          try {\n            await userDataService.addRecentSearch(dishToUse.trim());\n            // Update local state\n            setRecentSearches(prev => {\n              const filtered = prev.filter(item => item !== dishToUse.trim());\n              return [dishToUse.trim(), ...filtered].slice(0, 5); // Keep only 5 recent searches\n            });\n          } catch (error) {\n            console.error('Error saving recent search:', error);\n          }\n        } else {\n          // For non-authenticated users, just update local state\n          setRecentSearches(prev => {\n            const filtered = prev.filter(item => item !== dishToUse.trim());\n            return [dishToUse.trim(), ...filtered].slice(0, 5);\n          });\n        }\n      } else {\n        setError(response.data.error || 'Failed to fetch ingredients');\n      }\n    } catch (err) {\n      var _err$response, _err$response$data, _err$response2;\n      console.error('Error fetching ingredients:', err);\n      if ((_err$response = err.response) !== null && _err$response !== void 0 && (_err$response$data = _err$response.data) !== null && _err$response$data !== void 0 && _err$response$data.error) {\n        setError(err.response.data.error);\n      } else if (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.status) === 404) {\n        setError(`No recipe found for \"${dishToUse}\". Try a different dish name.`);\n      } else {\n        setError('Failed to connect to the server. Please try again.');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleCopy = () => {\n    // Copy functionality handled in MainApp component\n  };\n  const handleDownload = () => {\n    if (!ingredients.length) return;\n    const content = generateGroceryList();\n    const blob = new Blob([content], {\n      type: 'text/plain'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `${dishName.replace(/[^a-z0-9]/gi, '_').toLowerCase()}_grocery_list.txt`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n  const generateGroceryList = () => {\n    let content = `Grocery List for ${(recipeInfo === null || recipeInfo === void 0 ? void 0 : recipeInfo.title) || dishName}\\n`;\n    content += `Servings: ${servings}\\n`;\n    content += `Generated by We Know\\n\\n`;\n    content += `Ingredients:\\n`;\n    content += `============\\n\\n`;\n    ingredients.forEach((ingredient, index) => {\n      const quantity = ingredient.quantity;\n      const unit = ingredient.unit || '';\n      const name = ingredient.ingredient || 'Unknown ingredient';\n      if (quantity !== null) {\n        content += `${index + 1}. ${quantity} ${unit} ${name}\\n`;\n      } else {\n        content += `${index + 1}. ${name}\\n`;\n      }\n    });\n    return content;\n  };\n  const handleRecentSearchClick = async dish => {\n    setDishName(dish);\n\n    // Add to recent searches in database\n    if (isAuthenticated) {\n      try {\n        await userDataService.addRecentSearch(dish);\n      } catch (error) {\n        console.error('Error adding recent search:', error);\n      }\n    }\n  };\n  const addOrder = async order => {\n    // Save to database first\n    if (isAuthenticated) {\n      try {\n        const savedOrder = await userDataService.addOrder({\n          dish_name: order.dishName,\n          ingredients: order.ingredients,\n          servings: order.servings || 2\n        });\n\n        // Add to local state with database ID\n        setOrders(prevOrders => [...prevOrders, {\n          ...order,\n          id: savedOrder.order_id,\n          timestamp: new Date().toISOString()\n        }]);\n      } catch (error) {\n        console.error('Error saving order to database:', error);\n        // Still add to local state even if database save fails\n        setOrders(prevOrders => [...prevOrders, order]);\n      }\n    } else {\n      // For non-authenticated users, just add to local state\n      setOrders(prevOrders => [...prevOrders, order]);\n    }\n  };\n  const dishInputRef = useRef(null);\n  useEffect(() => {\n    if (dishInputRef.current) {\n      dishInputRef.current.focus();\n    }\n  }, [dishName]);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [!isAuthenticated && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'fixed',\n          top: '10px',\n          right: '10px',\n          zIndex: 9999,\n          background: '#ff4444',\n          color: 'white',\n          padding: '10px',\n          borderRadius: '5px',\n          fontSize: '12px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            clearAllLocalStorage();\n            logLocalStorageData();\n            alert('LocalStorage cleared! Please refresh the page.');\n          },\n          children: \"\\uD83E\\uDDF9 Clear All Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 11\n      }, this), isAuthenticated ? /*#__PURE__*/_jsxDEV(AppLayout, {\n        user: JSON.parse(localStorage.getItem('weKnowUser') || '{}'),\n        handleLogout: handleLogout,\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(HomePage, {\n              dish: dishName,\n              setDish: setDishName,\n              ingredients: ingredients,\n              loading: loading,\n              setLoading: setLoading,\n              error: error,\n              handleSubmit: handleSubmit,\n              handleCopy: handleCopy,\n              handleDownload: handleDownload,\n              generateGroceryList: generateGroceryList,\n              handleRecentSearchClick: handleRecentSearchClick,\n              recentSearches: recentSearches,\n              recipeInfo: recipeInfo,\n              servings: servings,\n              setServings: setServings,\n              orders: orders,\n              addOrder: addOrder\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/order-history\",\n            element: /*#__PURE__*/_jsxDEV(OrderHistory, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/saved-addresses\",\n            element: /*#__PURE__*/_jsxDEV(SavedAddresses, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 55\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/track-orders\",\n            element: /*#__PURE__*/_jsxDEV(TrackOrders, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 52\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/settings\",\n            element: /*#__PURE__*/_jsxDEV(Settings, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 48\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"*\",\n            element: /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/\",\n              replace: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 40\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 11\n      }, this) : showSignupScreen ? /*#__PURE__*/_jsxDEV(SignupScreen, {\n        onSwitchToLogin: () => {\n          setShowSignupScreen(false);\n          setShowLoginForm(true);\n        },\n        onSignupSuccess: userData => {\n          setIsAuthenticated(true);\n          setShowSignupScreen(false);\n          // Data will be loaded from database via useEffect\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(LandingPage, {\n        onLoginClick: () => setShowLoginForm(true),\n        onSignupClick: () => setShowSignupScreen(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 11\n      }, this), showLoginForm && /*#__PURE__*/_jsxDEV(LoginModal, {\n        isOpen: showLoginForm,\n        onClose: () => setShowLoginForm(false),\n        onLogin: () => {\n          setIsAuthenticated(true);\n          // Data will be loaded from database via useEffect\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 289,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"45BeWCh3YWmCWR5mpjSH8NFV28g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","BrowserRouter","Router","Routes","Route","Navigate","axios","userDataService","clearAllLocalStorage","logLocalStorageData","LoginModal","SignupModal","LandingPage","SignupScreen","AppLayout","HomePage","OrderHistory","SavedAddresses","Settings","TrackOrders","jsxDEV","_jsxDEV","App","_s","isAuthenticated","setIsAuthenticated","showLoginForm","setShowLoginForm","showSignupScreen","setShowSignupScreen","dishName","setDishName","servings","setServings","ingredients","setIngredients","recipeInfo","setRecipeInfo","loading","setLoading","error","setError","recentSearches","setRecentSearches","orders","setOrders","loadRecentSearches","searches","getRecentSearches","map","search","dish_name","console","loadOrders","userOrders","getOrders","checkAuth","token","localStorage","getItem","response","get","headers","data","success","removeItem","clearUserData","err","handleLogout","post","handleSubmit","e","overrideDishName","preventDefault","dishToUse","trim","log","recipe_info","addRecentSearch","prev","filtered","filter","item","slice","_err$response","_err$response$data","_err$response2","status","handleCopy","handleDownload","length","content","generateGroceryList","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","replace","toLowerCase","body","appendChild","click","removeChild","revokeObjectURL","title","forEach","ingredient","index","quantity","unit","name","handleRecentSearchClick","dish","addOrder","order","savedOrder","prevOrders","id","order_id","timestamp","Date","toISOString","dishInputRef","current","focus","children","className","style","position","top","right","zIndex","background","color","padding","borderRadius","fontSize","onClick","alert","fileName","_jsxFileName","lineNumber","columnNumber","user","JSON","parse","path","element","setDish","to","onSwitchToLogin","onSignupSuccess","userData","onLoginClick","onSignupClick","isOpen","onClose","onLogin","_c","$RefreshReg$"],"sources":["/Users/roshan/Desktop/we knowsample/frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './App.css';\nimport userDataService from './services/userDataService';\nimport { clearAllLocalStorage, logLocalStorageData } from './utils/clearLocalStorage';\n\n// Import components\nimport { LoginModal, SignupModal, LandingPage, SignupScreen } from './components';\nimport AppLayout from './components/AppLayout.jsx';\n\n// Import pages\nimport HomePage from './pages/HomePage';\nimport OrderHistory from './pages/OrderHistory';\nimport SavedAddresses from './pages/SavedAddresses';\nimport Settings from './pages/Settings';\nimport TrackOrders from './pages/TrackOrders';\n\nfunction App() {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [showLoginForm, setShowLoginForm] = useState(false);\n  const [showSignupScreen, setShowSignupScreen] = useState(false);\n  const [dishName, setDishName] = useState('');\n  const [servings, setServings] = useState(2);\n  const [ingredients, setIngredients] = useState([]);\n  const [recipeInfo, setRecipeInfo] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const [recentSearches, setRecentSearches] = useState([]);\n  const [orders, setOrders] = useState([]);\n  \n  // Load recent searches from database on component mount\n  useEffect(() => {\n    const loadRecentSearches = async () => {\n      if (isAuthenticated) {\n        try {\n          const searches = await userDataService.getRecentSearches();\n          setRecentSearches(searches.map(search => search.dish_name));\n        } catch (error) {\n          console.error('Error loading recent searches:', error);\n        }\n      } else {\n        // Clear local state when not authenticated\n        setRecentSearches([]);\n      }\n    };\n    \n    loadRecentSearches();\n  }, [isAuthenticated]);\n\n  // Load orders from database when authenticated\n  useEffect(() => {\n    const loadOrders = async () => {\n      if (isAuthenticated) {\n        try {\n          const userOrders = await userDataService.getOrders();\n          setOrders(userOrders);\n        } catch (error) {\n          console.error('Error loading orders:', error);\n        }\n      } else {\n        // Clear local state when not authenticated\n        setOrders([]);\n      }\n    };\n    \n    loadOrders();\n  }, [isAuthenticated]);\n\n  // Check if user is already authenticated\n  useEffect(() => {\n    const checkAuth = async () => {\n      const token = localStorage.getItem('weKnowToken');\n      if (token) {\n        try {\n          // Verify token with backend\n          const response = await axios.get('http://localhost:5001/auth/me', {\n            headers: {\n              'Authorization': `Bearer ${token}`\n            }\n          });\n          \n          if (response.data.success) {\n            setIsAuthenticated(true);\n            // Clear any old localStorage data that might interfere\n            localStorage.removeItem('weKnowRecentSearches');\n            localStorage.removeItem('weKnowAuthToken');\n          } else {\n            // Token is invalid, clear storage\n            userDataService.clearUserData();\n            setIsAuthenticated(false);\n          }\n        } catch (err) {\n          console.error('Auth check error:', err);\n          // Token is invalid, clear storage\n          userDataService.clearUserData();\n          setIsAuthenticated(false);\n        }\n      }\n    };\n    \n    checkAuth();\n  }, []);\n\n  const handleLogout = async () => {\n    try {\n      const token = localStorage.getItem('weKnowToken');\n      if (token) {\n        // Call logout endpoint\n        await axios.post('http://localhost:5001/auth/logout', {}, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n      }\n    } catch (err) {\n      console.error('Logout error:', err);\n      // Continue with logout even if API call fails\n    } finally {\n      // Clear authentication but keep data in database\n      userDataService.clearUserData();\n      setIsAuthenticated(false);\n      setShowLoginForm(false);\n      setShowSignupScreen(false);\n      setIngredients([]);\n      setRecipeInfo(null);\n      // Recent searches and orders will be cleared by useEffect when isAuthenticated becomes false\n    }\n  };\n\n  const handleSubmit = async (e, overrideDishName = null) => {\n    e.preventDefault();\n    \n    const dishToUse = overrideDishName || dishName;\n    \n    if (!dishToUse.trim()) {\n      setError('Please enter a dish name');\n      return;\n    }\n\n    setLoading(true);\n    setError('');\n    setIngredients([]);\n    setRecipeInfo(null);\n\n    try {\n      const response = await axios.post('http://localhost:5001/ingredients', {\n        dish_name: dishToUse.trim(),\n        servings: servings\n      });\n\n      console.log('Response received:', response.data);\n\n      if (response.data.success) {\n        console.log('Setting ingredients:', response.data.ingredients);\n        console.log('Setting recipe info:', response.data.recipe_info);\n        setIngredients(response.data.ingredients);\n        setRecipeInfo(response.data.recipe_info);\n        \n        // Add to recent searches in database\n        if (isAuthenticated) {\n          try {\n            await userDataService.addRecentSearch(dishToUse.trim());\n            // Update local state\n            setRecentSearches(prev => {\n              const filtered = prev.filter(item => item !== dishToUse.trim());\n              return [dishToUse.trim(), ...filtered].slice(0, 5); // Keep only 5 recent searches\n            });\n          } catch (error) {\n            console.error('Error saving recent search:', error);\n          }\n        } else {\n          // For non-authenticated users, just update local state\n          setRecentSearches(prev => {\n            const filtered = prev.filter(item => item !== dishToUse.trim());\n            return [dishToUse.trim(), ...filtered].slice(0, 5);\n          });\n        }\n      } else {\n        setError(response.data.error || 'Failed to fetch ingredients');\n      }\n    } catch (err) {\n      console.error('Error fetching ingredients:', err);\n      if (err.response?.data?.error) {\n        setError(err.response.data.error);\n      } else if (err.response?.status === 404) {\n        setError(`No recipe found for \"${dishToUse}\". Try a different dish name.`);\n      } else {\n        setError('Failed to connect to the server. Please try again.');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCopy = () => {\n    // Copy functionality handled in MainApp component\n  };\n\n  const handleDownload = () => {\n    if (!ingredients.length) return;\n\n    const content = generateGroceryList();\n    const blob = new Blob([content], { type: 'text/plain' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `${dishName.replace(/[^a-z0-9]/gi, '_').toLowerCase()}_grocery_list.txt`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  const generateGroceryList = () => {\n    let content = `Grocery List for ${recipeInfo?.title || dishName}\\n`;\n    content += `Servings: ${servings}\\n`;\n    content += `Generated by We Know\\n\\n`;\n    content += `Ingredients:\\n`;\n    content += `============\\n\\n`;\n\n    ingredients.forEach((ingredient, index) => {\n      const quantity = ingredient.quantity;\n      const unit = ingredient.unit || '';\n      const name = ingredient.ingredient || 'Unknown ingredient';\n      \n      if (quantity !== null) {\n        content += `${index + 1}. ${quantity} ${unit} ${name}\\n`;\n      } else {\n        content += `${index + 1}. ${name}\\n`;\n      }\n    });\n\n    return content;\n  };\n\n  const handleRecentSearchClick = async (dish) => {\n    setDishName(dish);\n    \n    // Add to recent searches in database\n    if (isAuthenticated) {\n      try {\n        await userDataService.addRecentSearch(dish);\n      } catch (error) {\n        console.error('Error adding recent search:', error);\n      }\n    }\n  };\n\n  const addOrder = async (order) => {\n    // Save to database first\n    if (isAuthenticated) {\n      try {\n        const savedOrder = await userDataService.addOrder({\n          dish_name: order.dishName,\n          ingredients: order.ingredients,\n          servings: order.servings || 2\n        });\n        \n        // Add to local state with database ID\n        setOrders(prevOrders => [...prevOrders, {\n          ...order,\n          id: savedOrder.order_id,\n          timestamp: new Date().toISOString()\n        }]);\n      } catch (error) {\n        console.error('Error saving order to database:', error);\n        // Still add to local state even if database save fails\n        setOrders(prevOrders => [...prevOrders, order]);\n      }\n    } else {\n      // For non-authenticated users, just add to local state\n      setOrders(prevOrders => [...prevOrders, order]);\n    }\n  };\n\n\n\n  const dishInputRef = useRef(null);\n\n  useEffect(() => {\n    if (dishInputRef.current) {\n      dishInputRef.current.focus();\n    }\n  }, [dishName]);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        {/* Temporary debug button - remove this after testing */}\n        {!isAuthenticated && (\n          <div style={{ \n            position: 'fixed', \n            top: '10px', \n            right: '10px', \n            zIndex: 9999,\n            background: '#ff4444',\n            color: 'white',\n            padding: '10px',\n            borderRadius: '5px',\n            fontSize: '12px'\n          }}>\n            <button onClick={() => {\n              clearAllLocalStorage();\n              logLocalStorageData();\n              alert('LocalStorage cleared! Please refresh the page.');\n            }}>\n              🧹 Clear All Data\n            </button>\n          </div>\n        )}\n        {isAuthenticated ? (\n          <AppLayout \n            user={JSON.parse(localStorage.getItem('weKnowUser') || '{}')}\n            handleLogout={handleLogout}\n          >\n            <Routes>\n              <Route path=\"/\" element={\n                <HomePage \n                  dish={dishName}\n                  setDish={setDishName}\n                  ingredients={ingredients}\n                  loading={loading}\n                  setLoading={setLoading}\n                  error={error}\n                  handleSubmit={handleSubmit}\n                  handleCopy={handleCopy}\n                  handleDownload={handleDownload}\n                  generateGroceryList={generateGroceryList}\n                  handleRecentSearchClick={handleRecentSearchClick}\n                  recentSearches={recentSearches}\n                  recipeInfo={recipeInfo}\n                  servings={servings}\n                  setServings={setServings}\n                  orders={orders}\n                  addOrder={addOrder}\n                />\n              } />\n              <Route path=\"/order-history\" element={<OrderHistory />} />\n              <Route path=\"/saved-addresses\" element={<SavedAddresses />} />\n              <Route path=\"/track-orders\" element={<TrackOrders />} />\n              <Route path=\"/settings\" element={<Settings />} />\n              <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\n            </Routes>\n          </AppLayout>\n        ) : showSignupScreen ? (\n          <SignupScreen\n            onSwitchToLogin={() => {\n              setShowSignupScreen(false);\n              setShowLoginForm(true);\n            }}\n            onSignupSuccess={(userData) => {\n              setIsAuthenticated(true);\n              setShowSignupScreen(false);\n              // Data will be loaded from database via useEffect\n            }}\n          />\n        ) : (\n          <LandingPage \n            onLoginClick={() => setShowLoginForm(true)}\n            onSignupClick={() => setShowSignupScreen(true)}\n          />\n        )}\n\n        {/* Login Form Modal */}\n        {showLoginForm && (\n          <LoginModal\n            isOpen={showLoginForm}\n            onClose={() => setShowLoginForm(false)}\n            onLogin={() => {\n              setIsAuthenticated(true);\n              // Data will be loaded from database via useEffect\n            }}\n          />\n        )}\n\n\n      </div>\n    </Router>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}